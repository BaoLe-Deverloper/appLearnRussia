{"version":3,"sources":["images/system/tick.jpg","images/system/Fail.png","images/system/test.jpg","images/system/media.jpg","images/system/11n.ico","images/system/bg.jpg","components/layout/MainNavbar/NavbarSearch.js","config.js","components/layout/MainNavbar/NavbarNav/Notifications.js","Redux/Types/index.js","Redux/Actions/mediaActions.js","Redux/Actions/userActions.js","Redux/Actions/testActions.js","Redux/Actions/vocabularyActions.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","data/sidebar-nav-itemsForTeacher.js","components/layout/MainSidebar/SidebarNavItem.js","data/sidebar-nav-itemsForStudent.js","auth/isAuthenticated.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","layouts/Default.js","components/layout/IndexNavbar/index.js","layouts/LayoutIndex.js","layouts/LayoutSignPage.js","components/common/PageTitle.js","components/common/SmallStats.js","utils/chart.js","components/Info/UsersOverview.js","components/Info/UserInfo.js","views/BlogOverview.js","firebase/initFirebase.js","firebase/uploadFileToFirebase.js","views/add-questions/Editor.js","views/AddQuestions.js","views/Errors.js","views/topics.js","views/vocabulary.js","views/Index.js","views/Home.js","views/AddVideo.js","components/Info/Discussions.js","views/TeacherDashBoard.js","views/mediaList.js","views/mediaTest/TimeDown.js","views/mediaTest/videoTest.js","views/mediaTest/Test.js","views/Test.js","views/sendTest/index.js","views/testFilter.js","views/addVocabulary.js","routes.js","views/Books.js","views/addBook.js","auth/ProtectedRoute.js","App.js","Redux/Reducers/UserReducer.js","Redux/Reducers/VideoReducer.js","Redux/Reducers/PostReducer.js","Redux/Reducers/TestReducer.js","Redux/Reducers/SystemReducer.js","Redux/Reducers/vocabularyReducer.js","Redux/Reducers/index.js","serviceWorker.js","index.js","images/avatars/userAvatar.png"],"names":["module","exports","__webpack_require__","p","NavbarSearch","react_default","a","createElement","shards_react_es","className","seamless","type","placeholder","config","UrlServerBase","newsApi_key","newsApi_fbclid","urlApi_Youtube","Notifications","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","notifications","toggleNotifications","bind","assertThisInitialized","_this2","JSON","parse","sessionStorage","getItem","setState","token","localStorage","axios","headers","Content-Type","Access-Control-Allow-Origin","Authorization","then","resp","data","err","setItem","stringify","console","log","onClick","pill","theme","length","open","map","val","i","key","from","message","Link","to","pathname","id","idTest","React","Component","Types","login","signup","logout","getStudents","getVideo","getPost","getMultiTest","getTestVideo","getTest","addTest","updateTest","toggleMenu","checkTest","resetTest","resetVocabulary","getVocabulary","getTopics","getListVideos","dispatch","local_data","time","Date","getHours","videos","types","payload","getListPost","newPost","get","news","articles","userLoginFetch","user","email","password","method","content-Type","Accept","AccessToken","loginUser","userSignupFetch","user_obj","name","username","claim","lever","urlAvatar","post","userLogOut","removeItem","getProfileFetch","test","getListTest","response","questions","_id","getVocabularies","idTopic","UserActions","urlAvarta","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","divider","_Logout","connect","userActions","navbarNav","navbar","Notifications_Notifications","NavbarNav_UserActions","currentUser","NavbarToggle","handleClick","_toggleMenu","href","MainNavbar","_ref","layout","stickyTop","classes","classNames","NavbarNav","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","maxWidth","cursor","SidebarSearch","display","minHeight","aria-label","sidebar_nav_itemsForTeacher","title","htmlBefore","SidebarNavItem","item","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","sidebar_nav_itemsForStudent","userAuth","isAuthenticated","authenticate","signOut","SidebarNavItems","SidebarNavItemsTeacher","SidebarNavItemsStudent","navItems","items","idx","MainSidebar_SidebarNavItem","MainSidebar","sidebarNavItems","getSidebarNavItems","system","menuVisible","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","layout_MainFooter","navbarIndex","width","zIndex","expand","active","layoutIndex","sectionStyle","backgroundSize","backgroundImage","concat","height","position","IndexNavbar","layoutSignPage","backgroundColor","history","goBack","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","SmallStats","canvasRef","createRef","_this$props","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","ref","shortid","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","chart","tooltip","_active","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","UsersOverview","chartOptions","objectSpread","responsive","legend","elements","tension","point","radius","xAxes","gridLines","ticks","callback","tick","index","yAxes","suggestedMax","toFixed","hover","mode","intersect","tooltips","custom","sendData","marksListen","listening","details","mark","marksRead","reading","marksTest","testing","chartData","labels","Array","_","datasets","fill","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","pointBorderColor","BlogUsersOverview","current","options","buoMeta","getDatasetMeta","_model","render","userInfo","date_create","toString","BlogOverview","smallStats","getData","total_markListen","total_mark","total_markRead","total_markTest","sum","percentageListen","total_Num","Math","round","percentageRead","percentageTest","percentageSum","decrease","noGutters","common_PageTitle","stats","common_SmallStats","chartLabels","Info_UsersOverview","UserInfo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","uploadFileToFirebase","link","isUploading","progress","FileURL","dir_file","fileName","handleUploadStart","handleProgress","handleUploadError","error","handleUploadSuccess","filename","storage","child","getDownloadURL","url","getFileUrl","color","padding","borderRadius","pointer","react_firebase_file_uploader_lib_default","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","marginTop","editor","openPicker","modules","toolbar","header","list","indent","formats","invalid","onChange","handleChange","description","react_simple_timefield_default","fontSize","margin","showSeconds","timeTest","firebase_uploadFileToFirebase","getFileUrlImage","lib_default","text","handleChangeText","addQuestions","componentWillMount","location","pre","pageTitle","url_media","status","number","currentNumber","changeHandle","e","target","defineProperty","plus","num","numberDefault","_this$state","answers","push","answer","slice","result","floor","random","minus","pop","addToList","_this$state2","saveToDatabase","_this$state3","_updateTest","_addTest","reset","update_status","_resetResult","splice","question","_this$state4","toast","notify","duration","Redirect","react_bootstrap_sweetalert_default","success","onConfirm","Editor","flush","disabled","marginLeft","min","max","checked","answerHandle","inline","outline","marginRight","DeleteQuestion","EditQuestion","testActions","Errors","vocabulary","_getTopics","window","responsiveVoice","speak","pitch","rate","volume","_getVocabulary","bundle","gutter","columnWidth","rowHeight","topics","topic","urlImg","Speech","GotoVocabulary","vocabularyActions","_reset","nameTopic","vocabularies","word","open_login","toggle_collapse","collapse","open_signup","event","handleSubmit_Login","preventDefault","_userLoginFetch","handleSubmit_Signup","_userSignUpFetch","confirm_pw","style_btn_login","alert","onSubmit","htmlFor","them","float","home","list_Yt","_getPosts","Get_time","_this3","media_video","YouTube","host","playerVars","origin","opts","videoId","snippet","resourceId","channelTitle","publishedAt","toGMTString","Posts","urlToImage","source","mediaActions","addVideo","url_video","coverImage","answerInputHandle","getFileUrlVideo","addQuestion","addAnswer","Reset","resetState","split","video_react_lib","playsInline","poster","isx","checkboxHandle","deleteAnswer","Discussions","students","student","TeacherDashBoard","_mana","_manaStudent","background","Info_Discussions","mediaList","loadData","listTest","View","deleteTest","showSuccess","showAlert","id_view","info","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onCancel","id_link","timeDown","time_arr","hour","parseInt","minute","second","border","timer","setInterval","_this2$state","stop","clearInterval","videoTest","start","clientAnswers","_checkTest","toggleResult","componentWillUnmount","classList","parentNode","questionOld","find","q","filter","fontWeight","tickImg","failImg","overflow","react_custom_scrollbars_lib","TimeDown_timeDown","html","renderHTML","_getTest","mediaTest_videoTest","Test","sendTest","handleOnSubmit","receivers","idReceiver","sendMail","handleOnSubmitAll","marginBottom","testFilter","loadList","Goto","addVocabulary","getTopic","arrTopic","_idTopic","routes","path","LayoutIndex","component","Index","exact","Home","private","AddVideo","AddQuestions","LayoutSignPage","TestFilter","Topics","Vocabulary","book","mapDataToState","books","viewBook","MediaList","Send","AddVocabulary","addBook","ProtectedRoute","rest","Route","App","BrowserRouter","basename","process","REACT_APP_BASENAME","Switch","route","ProtectedRoute_ProtectedRoute","react_addons_css_transition_group_default","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","transitionName","initialState","auth","combineReducers","arguments","undefined","action","video","Boolean","hostname","match","store","createStore","appReducer","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6905e3f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tick.e7813519.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fail.1e01570b.png\";","module.exports = __webpack_public_path__ + \"static/media/test.27e2db49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/media.8916ed98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11n.153c202b.ico\";","module.exports = __webpack_public_path__ + \"static/media/bg.d7f97288.jpg\";","import React from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n      </InputGroupAddon>\n      <FormInput\n        className=\"navbar-search\"\n        placeholder=\"Search for something...\"\n      />\n    </InputGroup>\n  </Form>\n);\n","export const config = {\r\n    UrlServerBase: \"https://apiapplearnrussian.herokuapp.com/api/v1/\",\r\n    newsApi_key:\"0ec9bb5b6f5e4ce581155c112e35ca58\",\r\n    newsApi_fbclid :\"IwAR1JJsvL1cR1QtDQxWiEle8wWRZw-YOgL_ez2bF_oDcFdQzmb0_vWZtcTx8\",\r\n    urlApi_Youtube:\"https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=PLLHjKKyQ4OaSLC6tLdplgGguAyTHEjUs0&key=AIzaSyD0-0rHKHyZrg-vy0mOwbaIOXt7plwKiHg\"\r\n}","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {config} from \"./../../../../config\";\nexport default class Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      notifications:[]\n    };\n  \n   \n\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n  }\n  componentWillMount(){\n    const notifications = JSON.parse(sessionStorage.getItem(\"notifications\"));\n    if(!notifications){\n      const  token = localStorage.getItem(\"accessToken\");\n      if (token) {\n        axios(config.UrlServerBase + \"notification\" , {\n            headers: {\n              'Content-Type': 'application/json;charset=UTF-8',\n              \"Access-Control-Allow-Origin\": \"*\",\n              'Authorization': \"Bearer \" + token\n            \n          }}).then(resp => {\n            if(!resp.data.err){\n              sessionStorage.setItem(\"notifications\",JSON.stringify(resp.data))\n              this.setState({notifications:resp.data});\n              console.log(\"get\")\n            }           \n          }) \n      }\n    }else{\n      this.setState({notifications});    \n    }\n}\n  toggleNotifications() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem className=\"border-right dropdown notifications\">\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">&#xE7F4;</i>\n            <Badge pill theme=\"danger\">\n              {this.state.notifications.length}\n            </Badge>\n          </div>\n        </NavLink>\n        <Collapse\n          open={this.state.visible}\n          className=\"dropdown-menu dropdown-menu-small\"\n        >\n        {this.state.notifications.map((val,i)=>(\n          \n          <DropdownItem key={i}>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE6E1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">{val.from}</span>\n              <p>\n                {val.message}\n              </p>\n              <Link to={{ pathname: \"/test\", state: { id: val.idTest } }} > Go to Test </Link>\n            </div>\n          </DropdownItem>\n        ))}\n          \n          \n          <DropdownItem className=\"notification__all text-center\">\n            View all Notifications\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","export default {\r\n    login:'LOGIN',\r\n    signup:\"SIGNUP\",\r\n    logout:\"LOGOUT\",\r\n    getStudents:\"GET_STUDENT\",\r\n    message:\"MESSAGE\",\r\n    getVideo:\"GET_VIDEO\",\r\n    getPost:\"GET_POST\",\r\n    getMultiTest:\"GET_MULTI_TEST\",\r\n    getTestVideo:\"GET_TEST_VIDEO\",\r\n    getTest:\"GET_TEST\",\r\n    addTest:\"ADD_TEST\",\r\n    updateTest:\"UPDATE_TEST\",\r\n    toggleMenu:\"TOGGLE_MENU\",\r\n    checkTest: \"CHECK_TEST\",\r\n    resetTest:\"RESET_TEST\",\r\n    resetVocabulary:\"RESET_VOCABULARY\",\r\n    getVocabulary:\"GET_VOCABULARY\",\r\n    getTopics:\"GET_TOPICS\"\r\n\r\n}","import { config } from \"./../../config\";\r\nimport axios from \"axios\";\r\nimport types from \"./../Types\";\r\n\r\nexport const getListVideos= () =>{\r\n    return dispatch => {\r\n      const local_data =JSON.parse(localStorage.getItem(\"videos_media\"));\r\n      if( local_data ===null || local_data.time > new Date().getHours + 1){\r\n        const token = localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n          axios(config.UrlServerBase + \"video\", {\r\n              headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Authorization': \"Bearer \" + token\r\n            }}).then(resp => {\r\n              if(!resp.data.message){\r\n                \r\n                const data = {videos : resp.data, time : new Date().getHours}\r\n                localStorage.setItem(\"videos_media\", JSON.stringify(data))\r\n                dispatch({type:types.getVideo, payload:resp.data} );\r\n              }\r\n                \r\n            })\r\n        }\r\n      }else{\r\n        dispatch({type:types.getVideo, payload:local_data.videos} );\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getListPost = () => {\r\n    return dispatch =>{\r\n      const newPost = JSON.parse(localStorage.getItem(\"newPost\"));\r\n      if (newPost === null || newPost.time > new Date().getHours + 3) {\r\n         axios.get(\"https://newsapi.org/v2/top-headlines?country=ru&apiKey=\"+config.newsApi_key+\"&fbclid=\" + config.newsApi_fbclid).then(resp => {\r\n              const data = { news: resp.data.articles, time: new Date().getHours }\r\n            \r\n              localStorage.setItem(\"newPost\", JSON.stringify(data));\r\n              dispatch({type:types.getPost, payload:data.news})\r\n             });\r\n       }else{\r\n         dispatch({type:types.getPost, payload:newPost.news})\r\n       }\r\n    }\r\n  }","import { config } from \"./../../config\";\r\nimport axios from \"axios\";\r\nimport types from \"./../Types\";\r\n\r\n\r\n\r\nexport const userLoginFetch = user => {\r\n \r\n  return dispatch => {\r\n    \r\n    return axios(\r\n    config.UrlServerBase + \"user/login\",\r\n     {\r\n     data: {email:user.email,password:user.password},\r\n     method:\"POST\",\r\n     headers:{\r\n      'content-Type': 'application/json',\r\n       Accept: 'application/json',\r\n       \"Access-Control-Allow-Origin\": \"*\"\r\n    }}).then(resp => {\r\n      \r\n      if (!resp.data.message) {\r\n        localStorage.setItem(\"accessToken\", resp.data.AccessToken);\r\n        dispatch(loginUser(resp.data.user));\r\n      } else {\r\n        dispatch({ type: types.message, payload: resp.data.message });\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\nexport const userSignupFetch = user => {\r\n  return dispatch => {\r\n    var user_obj = { name:user.username ,email:user.email,password:user.password, claim:user.claim, lever:user.lever, urlAvatar:user.urlAvatar}\r\n    return axios.post(config.UrlServerBase + \"user/signup\", user_obj).then(resp => {\r\n        dispatch({ type: types.message, payload: resp.data.message });\r\n    });\r\n  }\r\n}\r\n\r\nexport const userLogOut = () => {\r\n\r\n  return dispatch => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    dispatch({ type: types.logout });\r\n  };\r\n}\r\n\r\nexport const getProfileFetch = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n    return  axios(config.UrlServerBase + \"user\", {\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Authorization': \"Bearer \" + token\r\n          \r\n        }}).then(resp => {\r\n          if(!resp.data.message)\r\n             dispatch(loginUser( resp.data));\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\n// export const getManager = () => {\r\n//   return dispatch => {\r\n    \r\n//   }\r\n// }\r\nconst loginUser = user => ({\r\n  type: types.login,\r\n  payload: user\r\n})\r\n\r\n\r\n\r\n","import { config } from \"./../../config\";\r\nimport axios from \"axios\";\r\nimport types from \"./../Types\";\r\n\r\nexport const addTest = test => {\r\n\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n            axios(config.UrlServerBase + \"test\", {\r\n                data: test,\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Authorization': \"Bearer \" + token\r\n\r\n                }\r\n            }).then(resp => {\r\n                dispatch({ type: types.addTest, payload: resp.data });\r\n               \r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getListTest = () => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n        axios(config.UrlServerBase + \"test\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Authorization': \"Bearer \" + token\r\n            }\r\n        }).then(resp => {\r\n            return resp.data;\r\n\r\n        });\r\n    }\r\n}\r\nexport const getTest = id => {\r\n    return dispatch => {\r\n      \r\n        const  token =  localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n            axios(config.UrlServerBase + \"test/\" + id, {\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Authorization': \"Bearer \" + token\r\n                }\r\n            }).then(resp => {\r\n                if (!resp.data.err)\r\n                    dispatch({ type: types.getTest, payload: resp.data });\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkTest = test => {\r\n    return dispatch => {\r\n\r\n        const  token =  localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n            axios(config.UrlServerBase + \"test/check\", {\r\n                method:\"POST\",\r\n                data:test,\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Authorization': \"Bearer \" + token\r\n                }\r\n            }).then(resp => {\r\n                if (!resp.data.err)\r\n                    dispatch({ type: types.checkTest, payload: resp.data.response });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateTest = test => {\r\n\r\n    return dispatch => {\r\n        test.questions.map(val=>{\r\n           delete val._id;\r\n           return val;\r\n        });\r\n        const token = localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n            axios(config.UrlServerBase + \"test\", {\r\n                data: test,\r\n                method: \"put\",\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Authorization': \"Bearer \" + token\r\n\r\n                }\r\n            }).then(resp => {\r\n                dispatch({ type: types.updateTest, payload: resp.data });\r\n            \r\n            })\r\n        }\r\n    }\r\n}\r\n","import { config } from \"./../../config\";\r\nimport axios from \"axios\";\r\nimport types from \"./../Types\";\r\n\r\nexport const getVocabularies = (idTopic,name) => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    return axios(\r\n      config.UrlServerBase + \"vocabulary/\" + idTopic,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          'Authorization': \"Bearer \" + token\r\n        }\r\n      }).then(resp => {\r\n        if (!resp.data.err) \r\n          dispatch({ type: types.getVocabulary, payload: {data:resp.data, name}} );\r\n\r\n      });\r\n  }\r\n}\r\nexport const getTopics =() => {\r\n\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    return axios(\r\n      config.UrlServerBase + \"topic\" ,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          'Authorization': \"Bearer \" + token\r\n        }\r\n      }).then(resp => {\r\n        if (!resp.data.err)\r\n          dispatch({ type: types.getTopics, payload: resp.data });\r\n\r\n      });\r\n  }\r\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {userActions} from './../../../../Redux/Actions';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\nimport { connect } from \"react-redux\";\n\n class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      urlAvarta:\"https://im0-tub-ru.yandex.net/i?id=e360b0d0c9cd3982926ae6cac947e056-l&n=13\",\n      username:\"Baole\"\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={this.props.user.urlAvatar ? this.props.user.urlAvatar : require(\"./../../../../images/avatars/userAvatar.png\") }\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{this.props.user.name}</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n         \n          <DropdownItem tag={Link} to=\"user-profile-lite\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" onClick={()=>{this.props._Logout()}} className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  _Logout: () => {dispatch(userActions.userLogOut())}\n})\nexport default connect(null, mapDispatchToProps)(UserActions)","import React, { Component } from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nimport { connect } from \"react-redux\";\n class navbarNav extends Component{\n   \n  shouldComponentUpdate(){\n    return false;\n  }\n  render(){\n    return (\n      <Nav navbar className=\"border-left flex-row\">\n             <Notifications />\n             <UserActions user={this.props.data.currentUser}/>\n         </Nav>\n         \n     \n    );\n  }\n}\n\nconst mapStateToProps = state =>({\n  data : state.user\n})\nexport default connect(mapStateToProps, null) (navbarNav)","import React from \"react\";\nimport types from \"./../../../Redux/Types\";\nimport {connect} from \"react-redux\";\n\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n   this.props._toggleMenu();\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch=>({\n    _toggleMenu : ()=>{dispatch({type:types.toggleMenu})}\n})\nexport default connect(null,mapDispatchToProps)(NavbarToggle);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSearch />\n          <NavbarNav/>\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\nimport {connect} from \"react-redux\"; \nimport types from \"./../../../Redux/Types\";\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n   this.props._toggleMenu();\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"../../../images/system/11n.ico\")}\n                alt=\"Shards Dashboard\"\n              />\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                   App Learn Russian\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            style={{cursor: \"pointer\"}} className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nconst mapDispatchToProps = dispatch=>({\n  _toggleMenu : ()=>{dispatch({type:types.toggleMenu})}\n})\nexport default  connect(null,mapDispatchToProps)(SidebarMainNavbar);\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","export default\n [\n    {\n      title: \"DashBoard\",\n      htmlBefore: '<i class=\"material-icons\">dashboard</i>',\n      to: \"/teacher-dashboard\",\n    }, \n    {\n      title: \"Add Test\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/add-test\",\n    },\n    \n    {\n      title: \"Add Video\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/add-video\",\n    },\n    {\n      title: \"Add vocabulary\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/add-vocabulary\",\n    },\n     {\n      title: \"Add Book\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/add-book\",\n    }\n   \n   \n  ];\n\n","import React, {Component} from \"react\";\n\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport types from \"./../../../Redux/Types\";\nclass SidebarNavItem extends Component {\n  render(){\n    const { item} = this.props;\n    return (\n      <NavItem>\n        <NavLink tag={RouteNavLink} onClick={() => this.props._toggleMenu()} to={item.to}>\n          {item.htmlBefore && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n            />\n          )}\n          {item.title && <span>{item.title}</span>}\n          {item.htmlAfter && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n            />\n          )}\n        </NavLink>\n      </NavItem>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  _toggleMenu: () => { dispatch({ type: types.toggleMenu }) }\n})\nexport default connect(null, mapDispatchToProps)( SidebarNavItem);\n","export default\r\n [\r\n    {\r\n      title: \"Home Page\",\r\n      htmlBefore: '<i class=\"material-icons\">home</i>',\r\n      to: \"/\",\r\n    }, \r\n     {\r\n      title: \"User's Dashboard\",\r\n      to: \"/blog-overview\",\r\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\r\n      htmlAfter: \"\"\r\n    },\r\n    {\r\n      title: \"Tests Filter\",\r\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\r\n      to: \"/test-filer\",\r\n    },\r\n    {\r\n      title: \"Vocabulary\",\r\n      htmlBefore: '<i class=\"material-icons\">style</i>',\r\n      to: \"/topics\",\r\n    },\r\n    {\r\n      title: \"Books and Document\",\r\n      htmlBefore: '<i class=\"material-icons\">import_contacts</i>',\r\n      to: \"/books\",\r\n    },\r\n    // {\r\n    //   title: \"User Profile\",\r\n    //   htmlBefore: '<i class=\"material-icons\">person</i>',\r\n    //   to: \"/user-profile-lite\",\r\n    // },\r\n    {\r\n      title: \"Errors\",\r\n      htmlBefore: '<i class=\"material-icons\">error</i>',\r\n      to: \"/errors\",\r\n    }\r\n  ];\r\n\r\n","export const userAuth = {\r\n    isAuthenticated: false,\r\n    claim : \"\",\r\n    authenticate(claim) {\r\n      this.isAuthenticated = true\r\n      this.claim = claim\r\n    },\r\n    signOut() {\r\n      this.isAuthenticated = false\r\n      this.claim=\"\"\r\n    }\r\n  }","import React from \"react\";\nimport { Nav } from \"shards-react\";\nimport SidebarNavItemsTeacher from \"../../../data/sidebar-nav-itemsForTeacher\";\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport SidebarNavItemsStudent from \"../../../data/sidebar-nav-itemsForStudent\"\nimport {userAuth}  from './../../../auth/isAuthenticated';\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props);\n    var SidebarNavItems;\n    switch (userAuth.claim) {\n      case \"teacher\":\n        SidebarNavItems=SidebarNavItemsTeacher;\n       break;\n      case \"student\":\n        SidebarNavItems=SidebarNavItemsStudent;\n       break;\n       default: break;\n    }\n    this.state = {\n      navItems: SidebarNavItems\n    };\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    \n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\nimport getSidebarNavItems from '../../../data/sidebar-nav-itemsForTeacher'\nimport {connect} from \"react-redux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sidebarNavItems:getSidebarNavItems\n    };\n\n  }\n\n  \n\n\n \n  render() {\n\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.props.system.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nconst mapStateToProps = state=>({\n  system: state.system\n})\nexport default connect(mapStateToProps,null)(MainSidebar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink tag={Link} to={item.to}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.array,\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"App learn russian by Baole_developer @ 2019\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"/\"\n    },\n    {\n      title: \"info Application\",\n      to: \"#\"\n    },\n    {\n      title: \"About\",\n      to: \"#\"\n    }\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/layout/MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React, { Component } from \"react\";\r\nimport './style.css';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n} from \"shards-react\";\r\n\r\nclass navbarIndex extends Component {\r\n\r\n \r\n    render() {\r\n\r\n        return (\r\n\r\n            <Navbar style={{ width: \"100%\", \"zIndex\": 1000 }} expand=\"md\">\r\n                <NavbarBrand href=\"#\">App Learn Russian</NavbarBrand>\r\n                    <Nav navbar className=\"ml-auto\">\r\n                    <NavItem>\r\n                        <NavLink active href=\"#\">\r\n                           Info Apps\r\n                         </NavLink>\r\n                    </NavItem>\r\n                      \r\n                    </Nav>\r\n               \r\n              \r\n            </Navbar>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default navbarIndex;","import React, { Component } from \"react\";\r\nimport IndexNavBar from './../components/layout/IndexNavbar'\r\nclass layoutIndex extends Component{\r\n    \r\n    render(){\r\n      const sectionStyle = {\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url( ${require('./../images/system/bg.jpg')} )`,\r\n        height: \"1000px\",\r\n        width: \"100%\",\r\n        position:\"relative\"\r\n      };\r\n        return  (\r\n            <div style={sectionStyle} >\r\n                  <IndexNavBar/>\r\n                  {this.props.children}\r\n            </div>\r\n          );\r\n    }\r\n}  \r\n\r\n\r\nexport default layoutIndex;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Button, Container, Row } from \"shards-react\"\r\n\r\n\r\nclass layoutSignPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{backgroundColor:\"#fff\"}} fluid>\r\n                <Row>\r\n                    <Navbar>\r\n                        <Button onClick={() => { this.props.history.goBack() }}>Go Back</Button>\r\n                    </Navbar>\r\n                </Row>\r\n                {this.props.children}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default layoutSignPage;\r\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n\n  render() {\n    const { variation, label, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>{percentage}</span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\"\n};\n\nexport default SmallStats;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from \"react\";\nimport { Row, Card, CardHeader, CardBody } from \"shards-react\";\nimport { config } from \"./../../config\";\nimport axios from \"axios\";\n\nimport Chart from \"../../utils/chart\";\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n      const chartOptions = {\n        ...{\n          responsive: true,\n          legend: {\n            position: \"top\"\n          },\n          elements: {\n            line: {\n              // A higher value makes the line look skewed at this ratio.\n              tension: 0.3\n            },\n            point: {\n              radius: 0\n            }\n          },\n          scales: {\n            xAxes: [\n              {\n                gridLines: false,\n                ticks: {\n                  callback(tick, index) {\n                    // Jump every 7 values on the X axis labels to avoid clutter.\n                    return index % 7 !== 0 ? \"\" : tick;\n                  }\n                }\n              }\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  suggestedMax: 45,\n                  callback(tick) {\n                    if (tick === 0) {\n                      return tick;\n                    }\n                    // Format the amounts using Ks for thousands.\n                    return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\n                  }\n                }\n              }\n            ]\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: false\n          },\n          tooltips: {\n            custom: false,\n            mode: \"nearest\",\n            intersect: false\n          }\n        }\n      };\n      const token = localStorage.getItem(\"accessToken\");\n      if (token) {\n        axios(config.UrlServerBase + \"mark\", {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            \"Access-Control-Allow-Origin\": \"*\",\n            'Authorization': \"Bearer \" + token\n\n          }\n        }).then(resp => {\n          if (!resp.data.err) {\n    \n            this.props.sendData(resp.data)\n            const data = resp.data;\n            const marksListen = data.listening.details.map(val => {\n              return val.mark;\n            });\n            const marksRead = data.reading.details.map(val => {\n              return val.mark;\n            });\n            const marksTest = data.testing.details.map(val => {\n              return val.mark;\n            });\n\n            \n            const   chartData=  {\n                labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n                datasets: [\n                  {\n                    label: \"Listening\",\n                    fill: \"start\",\n                    data: marksListen,\n                    backgroundColor: \"rgba(0,123,255,0.1)\",\n                    borderColor: \"rgba(0,123,255,1)\",\n                    pointBackgroundColor: \"#ffffff\",\n                    pointHoverBackgroundColor: \"rgb(0,123,255)\",\n                    borderWidth: 1.5,\n                    pointRadius: 0,\n                    pointHoverRadius: 3\n                  },\n                  {\n                    label: \"Reading\",\n                    fill: \"start\",\n                    data: marksRead,\n                    backgroundColor: \"rgba(255,65,105,0.1)\",\n                    borderColor: \"rgba(255,65,105,1)\",\n                    pointBackgroundColor: \"#ffffff\",\n                    pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n                    borderWidth: 1.5,\n                    pointRadius: 0,\n                    pointHoverRadius: 2,\n                    pointBorderColor: \"rgba(255,65,105,1)\"\n                  },\n                  {\n                    label: \"Testing\",\n                    fill: \"start\",\n                    data: marksTest,\n                    backgroundColor: \"#04f00247\",\n                    borderColor: \"#035703\",\n                    pointBackgroundColor: \"#ffffff\",\n                    pointHoverBackgroundColor: \"#035703\",\n                    borderWidth: 1,\n                    pointRadius: 0,\n                    pointHoverRadius: 2,\n                    pointBorderColor: \"#035703\"\n                  }\n                ]\n              };\n            const BlogUsersOverview = new Chart(this.canvasRef.current, {\n              type: \"LineWithLine\",\n              data: chartData,\n              options: chartOptions\n            });\n\n            // They can still be triggered on hover.\n            const buoMeta = BlogUsersOverview.getDatasetMeta(0);\n            buoMeta.data[0]._model.radius = 0;\n            buoMeta.data[\n              chartData.datasets[0].data.length - 1\n            ]._model.radius = 0;\n\n            // Render the chart.\n            BlogUsersOverview.render();\n           \n          }\n        });\n      }\n     \n    \n\n  }\n\n  render() {\n\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Users Result</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n\n          </Row>\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n\nexport default UsersOverview;\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter\r\n} from \"shards-react\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nclass userInfo extends Component {\r\n  render() {\r\n    const currentUser = this.props.user.currentUser;\r\n    return (\r\n      <Card small className=\"h-100\">\r\n        <CardHeader className=\"border-bottom text-center\">\r\n          <div className=\"mb-3 mx-auto\">\r\n            <img\r\n              className=\"rounded-circle\"\r\n              src={currentUser.urlAvatar?currentUser.urlAvatar: require(\"./../../images/avatars/userAvatar.png\")}\r\n              alt=\"avatar\"\r\n              width=\"110\"\r\n              style={{ width: \"110px\" }} \r\n            />\r\n          </div>\r\n          <h4 className=\"mb-0\">{currentUser.name}</h4>\r\n        </CardHeader>\r\n        <CardBody className=\" py-0\">\r\n           <h6 className=\"text-left\"><b>Email: </b> {currentUser.email} </h6>\r\n           <h6 className=\"text-left\"><b>Date Create: </b>{new Date(currentUser.date_create).toString()} </h6>\r\n           {currentUser.lever? <h6 className=\"text-left\"><b>Lever: </b> {currentUser.lever} </h6>:\"\"}\r\n        </CardBody>\r\n        <CardFooter className=\"border-top\">\r\n          <Row>\r\n\r\n          </Row>\r\n        </CardFooter>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n  user:state.user\r\n})\r\nexport default connect(mapStateToProps, null)(userInfo);","import React, { Component} from \"react\";\n\nimport { Container, Row, Col } from \"shards-react\";\n\nimport PageTitle from \"./../components/common/PageTitle\";\nimport SmallStats from \"./../components/common/SmallStats\";\nimport UsersOverview from \"../components/Info/UsersOverview\";\nimport UserInfo from \"../components/Info/UserInfo\";\n// import NewDraft from \"../components/Info/NewDraft\";\n// import Discussions from \"../components/Info/Discussions\";\n// import TopReferrals from \"./../components/common/TopReferrals\";\n\nclass BlogOverview extends Component {\n\n  state = {\n    smallStats: []\n  }\n  getData= data =>{\n    const total_markListen = data.listening.total_mark;\n    const total_markRead = data.reading.total_mark;\n    const total_markTest = data.testing.total_mark;\n    const sum = total_markListen + total_markRead + total_markTest;\n    const percentageListen = data.listening.total_Num !== 0 ? Math.round(total_markListen  / data.listening.total_Num):0;\n    const percentageRead = data.reading.total_Num !== 0 ? Math.round(total_markListen  / data.reading.total_Num):0;\n    const percentageTest = data.testing.total_Num !== 0 ? Math.round(total_markListen  / data.testing.total_Num):0;\n    const percentageSum = Math.round((percentageListen + percentageRead + percentageTest)/3);\n    this.setState({\n      smallStats: [\n        {\n          label: \"Listening\",\n          value: total_markListen,\n          percentage: percentageListen +\"%\",\n          increase: percentageListen > 50,\n          decrease: percentageListen<50,\n          attrs: { md: \"6\", sm: \"6\" },\n        },\n        {\n          label: \"Reading\",\n          value: total_markRead,\n          percentage: percentageRead + \"%\",\n          increase: percentageRead>50,\n          decrease: percentageRead<50,\n          attrs: { md: \"4\", sm: \"6\" }\n        },\n        {\n          label: \"Testing\",\n          value: total_markTest,\n          percentage: percentageTest + \"%\",\n          increase: percentageTest > 50,\n          decrease: percentageTest<50,\n          attrs: { md: \"4\", sm: \"6\" }\n        },\n        {\n          label: \"Sum\",\n          value: sum,\n          percentage: percentageSum +\"%\",\n          increase: percentageSum > 50,\n          decrease: percentageSum < 50,\n          attrs: { md: \"4\", sm: \"6\" },\n        }\n      ]})\n  }\n  render(){\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle title=\"User's Dashboard\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n        </Row>\n\n        {/* Small Stats Blocks */}\n        <Row>\n          {this.state.smallStats.map((stats, idx) => (\n            <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n              <SmallStats\n                id={`small-stats-${idx}`}\n                variation=\"1\"\n                chartData={stats.datasets}\n                chartLabels={stats.chartLabels}\n                label={stats.label}\n                value={stats.value}\n                percentage={stats.percentage}\n                increase={stats.increase}\n                decrease={stats.decrease}\n              />\n            </Col>\n          ))}\n        </Row>\n\n        <Row>\n          {/* Users Overview */}\n          <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n            <UsersOverview sendData={this.getData} />\n          </Col>\n\n          {/* Users by Device */}\n          <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n            <UserInfo />\n          </Col>\n\n          {/* New Draft */}\n          {/* <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n            <NewDraft />\n          </Col> */}\n\n          {/* Discussions */}\n          {/* <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n            <Discussions />\n          </Col> */}\n\n          {/* Top Referrals */}\n          {/* <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n            <TopReferrals />\n          </Col> */}\n        </Row>\n      </Container>\n    );\n\n  }\n} \n\n\nexport default BlogOverview;\n","import firebase from \"firebase\";\r\n \r\nconst config = {\r\n    apiKey: \"AIzaSyB3XebFpHH4tg5ckGLv1qyEaSktXy7COw8\",\r\n    authDomain: \"applearnrussian.firebaseapp.com\",\r\n    databaseURL: \"https://applearnrussian.firebaseio.com\",\r\n    projectId: \"applearnrussian\",\r\n    storageBucket: \"applearnrussian.appspot.com\",\r\n    messagingSenderId: \"274851687562\",\r\n    appId: \"1:274851687562:web:dfd54fa0d3df01dd575173\"  \r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Progress } from \"shards-react\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport  \"./initFirebase\";\r\nclass uploadFileToFirebase extends Component {\r\n  state = {\r\n    link: \"\",\r\n    isUploading: false,\r\n    progress: 0,\r\n    FileURL: \"\"\r\n  };\r\n\r\n  dir_file=this.props.fileName?this.props.fileName:\"media\";\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n  handleProgress = progress => this.setState({ progress });\r\n  handleUploadError = error => {\r\n    this.setState({ isUploading: false });\r\n   \r\n  };\r\n  handleUploadSuccess = filename => {\r\n    this.setState({ link: filename, progress: 100, isUploading: false });\r\n    firebase\r\n      .storage()\r\n      .ref(this.dir_file)\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then(url => {\r\n          this.setState({ FileURL: url })\r\n          this.props.getFileUrl(url)\r\n    });\r\n  };\r\n \r\n  render() {\r\n   \r\n    return (\r\n        \r\n    <label style={{backgroundColor: '#bed6ea', color: 'white', padding: 4, borderRadius: 4, pointer: 'cursor', width:'100%'}}>\r\n           <h6 className=\"text-center\">{this.props.title}</h6>\r\n          <Progress theme=\"primary\" value={this.state.progress} />\r\n          <FileUploader\r\n            accept=\"image/*, video/*, audio/*\"\r\n            name=\"media\"\r\n            randomizeFilename\r\n            storageRef={firebase.storage().ref(this.dir_file)}\r\n            onUploadStart={this.handleUploadStart}\r\n            onUploadError={this.handleUploadError}\r\n            onUploadSuccess={this.handleUploadSuccess}\r\n            onProgress={this.handleProgress}\r\n            className=\"btn btn-primary btn-block\"\r\n            style={{padding:\"5px\", marginTop:\"5px\"}}\r\n          />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n \r\nexport default uploadFileToFirebase;","import React, { Component } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport {\n  Card, CardBody, Form, FormInput,\n  FormSelect, FormGroup, Container,\n  ButtonGroup,\n  Row, Col\n} from \"shards-react\";\nimport UploadFileToFirebase from \"./../../firebase/uploadFileToFirebase\"\nimport \"react-quill/dist/quill.snow.css\";\nimport \"../../assets/quill.css\";\nimport TimeField from 'react-simple-timefield';\n\nclass editor extends Component {\n  state = {\n    openPicker: false\n  }\n  modules = {\n    toolbar: [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\n\n      ['clean']\n    ],\n  }\n\n  formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image'\n  ]\n\n  render() {\n\n    return (\n      <Card small className=\"mb-3\">\n        <CardBody>\n\n\n          <Form className=\"add-new-post\">\n            <Container>\n              <Row>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <FormInput invalid={this.props.data.title === ''} className=\"mb-3\" name=\"title\" value={this.props.data.title} placeholder=\"Your test title\" onChange={this.props.handleChange} />\n                  </FormGroup>\n                  <FormGroup>\n                    <FormInput invalid={this.props.data.description === ''} className=\"mb-3\" name=\"description\" value={this.props.data.description} placeholder=\"Your test description\" onChange={this.props.handleChange} />\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"12\">\n                  <ButtonGroup>\n                    <label> Время теста (*часы: минуты: секунды)</label>\n                    <TimeField name=\"timeTest\" style={{ width: \"25%\", fontSize:\"20px\", margin:\"0 0 10px 10px\" }} showSeconds value={this.props.data.timeTest} onChange={this.props.handleChange} />\n                   </ButtonGroup>\n                  <FormGroup>\n                    <FormSelect invalid={this.props.data.lever === ''} value={this.props.data.lever} name=\"lever\" onChange={this.props.handleChange} >\n                      <option value=\"\">choose your lever</option>\n                      <option value=\"A1\">Lever A1</option>\n                      <option value=\"A2\">Lever A2</option>\n                      <option value=\"B1\">Lever B1</option>\n                      <option value=\"B2\">Lever B2</option>\n                      <option value=\"C1\">Lever C1</option>\n                      <option value=\"C2\">Lever C2</option>\n                      <option value=\"D1\">Lever D1</option>\n                      <option value=\"D2\">Lever D2</option>\n                    </FormSelect>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Container>\n\n            <UploadFileToFirebase fileName=\"Images_Test\" title=\"Загрузить изображение\" getFileUrl={this.props.getFileUrlImage} />\n            <ReactQuill style={{height:\"900px\"}} modules={this.modules}\n              formats={this.formats} theme=\"snow\" name=\"text\" value={this.props.data.text} onChange={this.props.handleChangeText} className=\"add-new-post__editor mb-1\" />\n          </Form>\n        </CardBody>\n      </Card>\n    );\n\n  }\n}\n\nexport default editor;\n","import React, { Component } from \"react\";\nimport { Container, \n  Row, \n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  FormCheckbox,\n  FormInput,\n  FormSelect,\n  ButtonGroup,\n  Badge, } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport Editor from \"./add-questions/Editor\";\n// import TableAnswers from \"./add-questions/TableAnswers\";\nimport axios from \"axios\";\nimport { config } from \"./../config\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { testActions } from './../Redux/Actions'\nimport toast from 'toasted-notes' \nimport SweetAlert from 'react-bootstrap-sweetalert';\nclass addQuestions extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {   \n      pageTitle:\"Добавить тест\",\n      text: '',\n      lever:\"\",\n      title:\"\",\n      description:\"\",\n      timeTest:'00:30:00',\n      //******************************** */\n      index: 0,\n      numberDefault: 0,\n      currentNumber: 1,\n      idTest: \"\",\n      // test: {\n      //   title: '',\n      //   type: \"test\",\n      //   lever: \"A1\",\n      //   description: \"\",\n      //   url_media: \"\",\n      //   questions: [],\n      //   timeTest: \"\"\n      // },\n      answers: [],\n      number: 1,\n      type: \"АБВГДЕ\",\n      questions:[],\n      status:true\n    } ;\n   \n  }\n  componentWillMount = ()=>{\n    const id = this.props.location.state ? this.props.location.state.id : null;\n    if(id){\n      const token = localStorage.getItem(\"accessToken\");\n      if (token) {\n        axios(config.UrlServerBase + \"test/getById/\" + id, {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            \"Access-Control-Allow-Origin\": \"*\",\n            'Authorization': \"Bearer \" + token\n\n          }\n        }).then(resp => {\n\n          if (!resp.data.err){\n            const test = resp.data;\n            this.setState(pre => ({ ...pre, pageTitle: \"изменить тест\",\n             text: test.url_media, \n             description: test.description,\n             timeTest: test.timeTest,\n             lever:test.lever,\n             title:test.title,\n             status:test.status,\n             questions: test.questions,\n              number: test.questions.length + 1 ,\n             currentNumber: test.questions.length +1 ,\n             idTest:id\n          }))\n          }\n         \n        });\n      }\n     \n    }\n  }\n\n  \n \n  handleChangeText = val =>{\n    this.setState({...this.state,text:val});\n  }\n\n  getFileUrlImage= url=>{\n    var text = this.state.text;\n    text +=`<img src=${url} style=\"width=100%;height:auto;position=absolute;margin:5px;\"/>`;\n    this.setState({...this.state,text})\n  }\n  // **************************************** //\n\n  changeHandle = e => {\n    const target = e.target;\n    this.setState({ ...this.state, [target.name]: target.value });\n  }\n  plus = () => {\n    const num = this.state.numberDefault;\n\n    if (num < 6) {\n      const { answers, type } = this.state;\n      const i = answers.length;\n      answers.push({ answer: type.slice(i, i + 1), result: false, id: Math.floor(Math.random() * 100000) })\n      this.setState({ ...this.state, answers, numberDefault: num + 1 })\n    }\n  }\n\n  minus = () => {\n    const num = this.state.numberDefault;\n    const answers = this.state.answers;\n\n    answers.pop();\n    if (num > 0)\n      this.setState({ ...this.state, answers, numberDefault: num - 1 })\n  }\n\n  answerHandle(id) {\n    const answers = this.state.answers;\n    answers[id].result = !answers[id].result;\n    this.setState({ ...this.state, answers });\n  }\n\n  addToList = () => {\n    var { index, number, currentNumber, numberDefault, type, answers, questions } = this.state;\n    if (index > 0) {\n      questions[index] = { number: number, answers }\n      number = currentNumber;\n    }\n\n    else {\n      questions.push({ number: number, answers });\n      currentNumber++;\n      number++;\n    }\n    answers = [];\n    for (let i = 0; i < numberDefault; i++) {\n      answers.push({ answer: type.slice(i, i + 1), result: false, id: Math.floor(Math.random() * 100000) })\n    }\n\n    this.setState({ ...this.state, questions, number, currentNumber, answers, index: 0 });\n\n  }\n  DeleteQuestion(id) {\n    const questions = this.state.questions;\n    questions.splice(id,1);\n    this.setState({ ...this.state, questions });\n  }\n  EditQuestion(id) {\n    const question = this.state.questions[id];\n    this.setState({ ...this.state, answers: question.answers, number: question.number, index: id, numberDefault: question.answers.length });\n  }\n\n  saveToDatabase = () => {\n    const { title, lever, description, text, questions, timeTest, status,idTest} = this.state;\n    const test = {\n      title,\n      type: \"test\",\n      lever,\n      description,\n      url_media: text,\n      questions,\n      timeTest,\n      status\n      }\n    if (!idTest)\n      this.props._addTest(test);\n    else{\n      test[\"id\"] = idTest;\n      this.props._updateTest(test); \n    }\n       \n  }\n  reset = () => {\n    if (this.props.test.update_status)\n      this.props._resetResult();\n  }\n// ************************************************** //\n  render() {\n    const { title, url_media, description,questions } = this.state;\n    if (this.props.test.result) {\n      toast.notify(\"Успешно сохранено в базе данных !\", { position: 'top', duration: 2000 });\n      return <Redirect to={{ pathname: \"/send\", state: { id: this.props.test.id } }} />\n    }\n\n    return (\n      <Container fluid className=\"main-content-container px-4 pb-4\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title={this.state.pageTitle} className=\"text-sm-left\" />\n        </Row>\n        {\n          this.props.test.update_status && <SweetAlert success title=\"Уведомление\" onConfirm={() => this.reset()}>\n            Успешно сохранено в базе данных !\n                       </SweetAlert>\n\n        }\n        <Row>\n      \n          <Col lg=\"8\" md=\"12\">\n            \n            <Editor data={this.state} getFileUrlImage={this.getFileUrlImage} handleChangeText={this.handleChangeText} handleChange={this.changeHandle} />\n          </Col>\n\n        \n          <Col lg=\"4\" md=\"12\">\n              {/* <TableAnswers  data= {this.state}/> */}\n            <Card small className=\"mb-3\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Add Answer</h6>\n              </CardHeader>\n              <CardBody className=\"p-0\">\n                <ListGroup flush>\n                  <ListGroupItem className=\"px-3 pb-2\">\n                    <label>Номер вопроса </label>\n                    <ButtonGroup size=\"sm\" style={{ margin: \"6px\" }} className=\"ml-auto\">\n                      <FormInput disabled  style={{ marginLeft: \"10px\" }} value={this.state.number} type=\"number\" name=\"number\" min=\"0\" onChange={this.changeHandle} />\n\n                    </ButtonGroup>\n                    <label>количество ответов</label>\n                    <ButtonGroup size=\"sm\" className=\"ml-auto\">\n                      <FormSelect value={this.state.type} name=\"type\" onChange={this.changeHandle}   >\n                        <option value=\"АБВГДЕ\">АБВГДЕ</option>\n                        <option value=\"ABCDEF\">ABCDEF</option>\n                        <option value=\"123456\">123456</option>\n                      </FormSelect>\n                      <FormInput type=\"number\" disabled style={{ width: \"30%\" }} value={this.state.numberDefault} name=\"numberDefault\" onChange={this.changeHandle} max=\"6\" min=\"0\" />\n                      <Button size=\"sm\" onClick={this.plus}> <i className=\"material-icons\">add</i></Button>\n                      <Button size=\"sm\" onClick={this.minus}> <i className=\"material-icons\">remove</i></Button>\n                    </ButtonGroup>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"px-3 pb-2\">\n                    {this.state.answers.map((val, i) => (\n                      <FormCheckbox checked={val.result} onChange={() => { this.answerHandle(i) }} inline key={i} size=\"lg\">\n                        {val.answer}\n                      </FormCheckbox>\n                    ))}\n\n\n                  </ListGroupItem>\n                  <ListGroupItem className=\"px-3 pb-2\">\n\n                  </ListGroupItem>\n                  <ListGroupItem className=\"d-flex px-3 border-0\">\n                    <Button disabled={this.state.numberDefault === 0} outline theme=\"accent\" size=\"sm\" onClick={this.addToList}>\n                      <i className=\"material-icons\">save</i> Save List\n              </Button>\n\n                  </ListGroupItem>\n                </ListGroup>\n              </CardBody>\n            </Card>\n\n            <Card small className=\"mb-3\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Table Answers</h6>\n              </CardHeader>\n              <CardBody className=\"p-0\">\n                <ListGroup flush>\n                  {questions.map((val, i) => (\n                    <ListGroupItem className=\"d-flex px-3 border-0\" key={i}>\n                      {\"№ \" + val.number + \":\"} &nbsp;&nbsp; {val.answers.map((answer, i) => (\n                        <Badge key={i} style={{ marginRight: \"10px\" }} theme={answer.result ? \"success\" : \"dark\"}>{answer.answer}</Badge>\n                      ))}\n                      <ButtonGroup size=\"sm\" style={{ position: \"absolute\", top: \"5px\", right: \"5px\" }} className=\"ml-auto\">\n                        <Button onClick={() => { this.DeleteQuestion(i) }} outline theme=\"warning\"> <i className=\"material-icons\">delete_outline</i></Button>\n                        <Button onClick={() => { this.EditQuestion(i) }} outline > <i className=\"material-icons\">edit</i></Button>\n                      </ButtonGroup>\n                    </ListGroupItem>\n                  ))}\n                  <ListGroupItem className=\"d-flex px-3 border-0\">\n                    <FormCheckbox\n                      checked={this.state.status}\n                      onChange={() => this.setState({status:!this.state.status})}\n                    >\n                      Public Test\n                    </FormCheckbox>\n                    <Button disabled={url_media === \"\" || title === \"\" || description === \"\"} theme=\"accent\" onClick={this.saveToDatabase} outline size=\"sm\" className=\"ml-auto\">\n                      <i className=\"material-icons\">save</i> Save To Database\n                                        </Button>\n                  </ListGroupItem>\n                </ListGroup>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  test: state.test\n})\nconst mapDispatchToProps = dispatch => ({\n  _addTest: test => { dispatch(testActions.addTest(test)) },\n  _updateTest: test => { dispatch(testActions.updateTest(test))},\n  _resetResult: () => { dispatch({ type: \"RESET_TEST\" }) }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(addQuestions);\n","import React,{Component} from \"react\";\nimport { Container, Button } from \"shards-react\";\n\nclass Errors extends Component{\n  render(){\n    return (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <div className=\"error\">\n      <div className=\"error__content\">\n        <h2>500</h2>\n        <h3>Something went wrong!</h3>\n        <p>There was a problem on our end. Please try again later.</p>\n        <Button onClick={()=>{this.props.history.goBack()}} pill>&larr; Go Back</Button>\n      </div>\n    </div>\n  </Container>\n);\n  }\n} \nexport default Errors;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\r\nimport { Grid, GridItem } from \"react-masonry-grid\";\r\nimport React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\nListGroupItem,\r\n  Button,\r\n  CardFooter\r\n} from \"shards-react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { vocabularyActions} from \"./../Redux/Actions\"\r\n\r\nclass vocabulary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props._getTopics();\r\n    this.state = {\r\n      result:false\r\n    };\r\n  }\r\n\r\n  Speech(text) {\r\n    window.responsiveVoice.speak(text, \"Russian Male\", { pitch: 1, rate: 1, volume: 1.2 });\r\n  }\r\n  GotoVocabulary(id,name) {\r\n    this.props._getVocabulary(id, name);\r\n    this.setState({result:true})\r\n  }\r\n  render() {\r\n   \r\n\r\n    \r\n    return (\r\n      <Container  fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\"  title=\"Tемы\" subtitle=\"*********\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {this.state.result && <Redirect to=\"/vocabularies\" />}\r\n        <Row>\r\n          <Grid gutter={10} columnWidth={300} rowHeight={10}>\r\n\r\n\r\n            {this.props.topics.map((topic, idx) => (\r\n\r\n              <GridItem lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\" key={idx}>\r\n                <Card small className=\"card-post card-post--1\">\r\n                  <div\r\n                    className=\"card-post__image\"\r\n                    style={{ backgroundImage: `url(${topic.urlImg})` }}\r\n                  >\r\n                  </div>\r\n                  <CardBody>\r\n                    <h3 className=\"card-title\">\r\n                      {topic.name}\r\n                    </h3>\r\n                    <p className=\"card-text d-inline-block mb-3\">{topic.description}</p>\r\n\r\n                  </CardBody>\r\n\r\n                  <CardFooter>\r\n                       <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                    <Button outline pill theme=\"info\" onClick={() => this.Speech(topic.name)}><i className=\"material-icons\">\r\n                      volume_up\r\n                    </i> Listen</Button>\r\n                    <Button theme=\"accent\" outline pill size=\"sm\" onClick={()=>this.GotoVocabulary(topic._id,topic.name)} className=\"ml-auto\">\r\n                      <i className=\"material-icons\">send</i> Goto\r\n                                        </Button>\r\n                      </ListGroupItem>\r\n                  </CardFooter>\r\n                </Card>\r\n              </GridItem>\r\n            ))}\r\n          </Grid>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  topics: state.vocabulary.topics\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  _getTopics:()=>{dispatch(vocabularyActions.getTopics())},\r\n  _getVocabulary: (idTopic,name) => { dispatch(vocabularyActions.getVocabularies(idTopic,name)) }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(vocabulary);\r\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\r\nimport { Grid, GridItem } from \"react-masonry-grid\";\r\nimport React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  CardFooter,\r\n  ListGroupItem\r\n} from \"shards-react\";\r\nimport {connect} from \"react-redux\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\n\r\n\r\nclass vocabulary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    this.props._reset();\r\n  }\r\n  Speech(text) {\r\n    window.responsiveVoice.speak(text, \"Russian Male\", { pitch: 1, rate: 1, volume: 1.2 });\r\n  }\r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n      <Container style={{ minHeight:\"800px\" }} fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" style={{ color: \"#fff\" }} title=\"Словарные слова\" subtitle={\"Тема: \" +this.props.nameTopic} className=\"text-sm-left\" />\r\n        </Row>\r\n<br/>\r\n        <Row>\r\n          <Grid gutter={10} columnWidth={300} rowHeight={10}>\r\n\r\n\r\n            {this.props.vocabularies.map((vocabulary, idx) => (\r\n\r\n              <GridItem lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\" key={idx}>\r\n                <Card small className=\"card-post card-post--1\">\r\n                  <div\r\n                    className=\"card-post__image\"\r\n                    style={{ backgroundImage: `url(${vocabulary.urlImg})` }}\r\n                  >\r\n                  </div>\r\n                  <CardBody>\r\n                    <h4 className=\"card-title\">\r\n                      {vocabulary.word}\r\n                    </h4>\r\n                    <p className=\"card-text d-inline-block mb-3\">{vocabulary.description}  </p>   \r\n\r\n                  </CardBody>\r\n\r\n                  <CardFooter>\r\n                  <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                    <Button outline pill theme=\"info\" onClick={() => this.Speech(vocabulary.word)}><i className=\"material-icons\">\r\n                      volume_up\r\n                    </i> Listen</Button>\r\n                    <Button outline pill theme=\"info\" onClick={() => this.Speech( vocabulary.description)}  className=\"ml-auto\"><i className=\"material-icons\">\r\n                      volume_up\r\n                    </i> Listen more</Button>\r\n                    </ListGroupItem>\r\n                  </CardFooter>\r\n                </Card>\r\n              </GridItem>\r\n            ))}\r\n          </Grid>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  vocabularies: state.vocabulary.vocabularies,\r\n  nameTopic:state.vocabulary.name\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  _reset: () => { dispatch({type:\"RESET_VOCABULARY\"}) }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(vocabulary);\r\n","import React from \"react\";\r\nimport { userAuth } from './../auth/isAuthenticated';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  FormSelect,\r\n  FormCheckbox,\r\n  Alert,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  Card,\r\n  CardBody,\r\n  Container\r\n} from \"shards-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { userActions } from \"../Redux/Actions\";\r\nimport UploadFileToFirebase from \"./../firebase/uploadFileToFirebase\";\r\nimport { connect } from \"react-redux\";\r\nimport 'toasted-notes/src/styles.css';\r\nclass index extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      open: true,\r\n      collapse: true,\r\n      claim: \"student\",\r\n      email: \"\",\r\n      password: \"\",\r\n      lever: \"\",\r\n      urlAvatar: \"\",\r\n      confirm_pw: \"\",\r\n      username: \"\"\r\n    };\r\n\r\n  }\r\n\r\n  open_login = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n\r\n  }\r\n\r\n  toggle_collapse = () => {\r\n\r\n    this.setState({\r\n      collapse: !this.state.collapse,\r\n      claim: !this.state.collapse ? \"student\" : \"teacher\"\r\n    });\r\n  }\r\n  open_signup = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  }\r\n\r\n\r\n  handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit_Login = e => {\r\n    e.preventDefault();\r\n\r\n    this.props._userLoginFetch(this.state);\r\n  }\r\n\r\n  handleSubmit_Signup = e => {\r\n    e.preventDefault();\r\n    this.props._userSignUpFetch(this.state);\r\n\r\n  }\r\n\r\n  getFileUrlImage = url => {\r\n    this.setState({ ...this.state, urlAvatar: url })\r\n  }\r\n  render() {\r\n    const style_btn_login = { width: \"50%\", margin: \"10px 25%\" }\r\n    const alert = this.props.data.message === \"\" ? \"\" : <Alert theme=\"warning\">{this.props.data.message}</Alert>;\r\n    if (userAuth.isAuthenticated) {\r\n      if (userAuth.claim === \"student\") {\r\n        return <Redirect to=\"/\" />\r\n      }\r\n      if (userAuth.claim === \"teacher\") {\r\n        return <Redirect to=\"/teacher-dashboard\" />\r\n      }\r\n\r\n    }\r\n const login = <Form onSubmit={this.handleSubmit_Login}>\r\n      <h3 className=\"text-center\">Login</h3>\r\n      {alert}\r\n      <FormGroup>\r\n        <label htmlFor=\"#username\">Email</label>\r\n        <FormInput type=\"email\" id=\"#username\" name=\"email\" onChange={this.handleChange} placeholder=\"Username\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor=\"#password\">Password</label>\r\n        <FormInput onChange={this.handleChange} name=\"password\" type=\"password\" id=\"#password\" placeholder=\"Password\" />\r\n      </FormGroup>\r\n\r\n      <Button disabled={this.state.email === \"\" || this.state.password === \"\"} type=\"submit\" style={style_btn_login} outline pill them=\"success\"> Login </Button>\r\n      <Link to=\"#\" className=\"text-right\" style={{ float: \"right\" }} onClick={this.open_signup}>You haven't account? Register </Link>\r\n      <div className=\"footer-social-icons\" style={{ marginTop: '20px' }}>\r\n        <h4 className=\"_14\">Follow us on</h4>\r\n        <hr />\r\n        <ul className=\"social-icons\">\r\n          <li><Link to=\"/\" className=\"social-icon\"> <i className=\"fa fa-facebook\"></i></Link></li>\r\n          <li><Link to=\"/\" className=\"social-icon\"> <i className=\"fa fa-twitter\"></i></Link></li>\r\n          <li><Link to=\"/\" className=\"social-icon\"> <i className=\"fa fa-rss\"></i></Link></li>\r\n          <li><Link to=\"/\" className=\"social-icon\"> <i className=\"fa fa-youtube\"></i></Link></li>\r\n          <li><Link to=\"/\" className=\"social-icon\"> <i className=\"fa fa-linkedin\"></i></Link></li>\r\n          <li><Link to=\"/\" className=\"social-icon\"> <i className=\"fa fa-google-plus\"></i></Link></li>\r\n        </ul>\r\n      </div>\r\n    </Form>;\r\n    const signup = <Form onSubmit={this.handleSubmit_Signup}>\r\n      <h3 className=\"text-center\">Register</h3>\r\n      {alert}\r\n      <div className=\"mb-3 mx-auto text-center\">\r\n        <img\r\n          className=\"rounded-circle\"\r\n          src={this.state.urlAvatar ? this.state.urlAvatar : require(\"./../images/avatars/userAvatar.png\")}\r\n          alt=\"avatar\"\r\n          width=\"100\"\r\n        />\r\n        <UploadFileToFirebase fileName=\"avatarUsers\" title=\"Загрузить изображение\" getFileUrl={this.getFileUrlImage} />\r\n      </div>\r\n\r\n\r\n      <FormGroup>\r\n        <label htmlFor=\"#username\">Username</label>\r\n        <FormInput id=\"#username\" placeholder=\"Username\" name=\"username\" onChange={this.handleChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor=\"#password\">Email</label>\r\n        <FormInput type=\"email\" id=\"#password\" placeholder=\"abc@gmail.com\" name=\"email\" onChange={this.handleChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor=\"#password\">Password</label>\r\n        <FormInput type=\"password\" id=\"#password\" placeholder=\"***********\" name=\"password\" onChange={this.handleChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor=\"#password\">Confirm Password</label>\r\n        <FormInput invalid={this.state.password !== this.state.confirm_pw} type=\"password\" id=\"#password\" placeholder=\"************\" name=\"confirm_pw\" onChange={this.handleChange} />\r\n      </FormGroup>\r\n      <hr />\r\n      <FormCheckbox checked={!this.state.collapse} toggle small onChange={this.toggle_collapse}  > Register for teacher ?  </FormCheckbox>\r\n\r\n      <Collapse open={this.state.collapse}>\r\n        <FormSelect name=\"lever\" onChange={this.handleChange}>\r\n          <option value=\"\">choose your lever</option>\r\n          <option value=\"A1\">Lever A1</option>\r\n          <option value=\"A2\">Lever A2</option>\r\n          <option value=\"B1\">Lever B1</option>\r\n          <option value=\"B2\">Lever B2</option>\r\n          <option value=\"C1\">Lever C1</option>\r\n          <option value=\"C2\">Lever C2</option>\r\n          <option value=\"D1\">Lever D1</option>\r\n          <option value=\"D2\">Lever D2</option>\r\n        </FormSelect>\r\n\r\n      </Collapse>\r\n      <br />\r\n      <Button type=\"submit\" disabled={this.state.username === \"\" || this.state.email === \"\" || this.state.password !== this.state.confirm_pw || this.state.password === \"\"} style={style_btn_login} outline pill theme=\"success\"> Register </Button>\r\n      <Link to=\"#\" className=\"text-right\" style={{ float: \"right\" }} onClick={this.open_login}> <span>You have account ?</span> Login </Link>\r\n</Form>;\r\n\r\n    return (\r\n      <Container>\r\n        <Card style={{ maxWidth: \"600px\", margin: \"40px auto\", }}>\r\n          <CardBody>\r\n            {this.state.open ? login : signup}\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </Container>\r\n            \r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  data: state.user\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  _userLoginFetch: user => dispatch(userActions.userLoginFetch(user)),\r\n  _userSignUpFetch: user => dispatch(userActions.userSignupFetch(user))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","import React, { Component } from 'react';\r\nimport {\r\n    Container, Row, Badge,\r\n    Button, Col, Card, CardBody, \r\n    CardTitle,CardFooter } from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { Grid, GridItem } from \"react-masonry-grid\";\r\nimport { Link } from 'react-router-dom';\r\nimport YouTube from 'react-youtube';\r\nimport { config } from \"../config\";\r\nimport axios from \"axios\";\r\nimport { mediaActions } from \"./../Redux/Actions\"\r\nimport { connect } from 'react-redux';\r\nclass home extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            list_Yt : []\r\n        }\r\n    }\r\n    async componentWillMount () {\r\n        this.props._getPosts();\r\n        const list_Yt =JSON.parse(sessionStorage.getItem(\"list_Yt\"));\r\n        if (!list_Yt || list_Yt.Get_time > new Date().getHours+1){\r\n           await axios(config.urlApi_Youtube).then(resp => {\r\n                const data = { data: resp.data.items, Get_time: new Date().getHours }\r\n                this.setState(() => ({ list_Yt: resp.data.items }));\r\n                sessionStorage.setItem(\"list_Yt\", JSON.stringify(data));\r\n\r\n            })\r\n        }else{\r\n            this.setState(() => ({ list_Yt:list_Yt.data }));\r\n        }\r\n       \r\n\r\n    }\r\n\r\n   \r\n    Speech(text) {\r\n        window.responsiveVoice.speak(text, \"Russian Male\", { pitch: 1, rate: 1, volume: 1.2 });\r\n    }\r\n    \r\n    render() {\r\n     \r\n        const media_video = this.state.list_Yt.map((val, i) => {\r\n          \r\n            return (\r\n                <Col key={i} sm=\"12\" md=\"8\" lg=\"4\">\r\n                    <Card style={{ margin: \"5px 0\" }}>\r\n                        <YouTube host ='https://www.youtube.com' playerVars={{ 'origin':'https://youthful-easley-2870f7.netlify.com' }} opts={{ width: \"100%\", height: \"300px\" }} videoId={val.snippet.resourceId.videoId} />\r\n                        <CardBody>\r\n                           \r\n                            <CardTitle>{val.snippet.title}</CardTitle>\r\n                            <span>{val.snippet.channelTitle}</span> \r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            {new Date(val.snippet.publishedAt).toGMTString() }\r\n                        </CardFooter>\r\n                    </Card>\r\n                   \r\n                </Col>\r\n              \r\n            )\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Container fluid className=\"main-content-container px-4\">\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"Новости сегодня \" subtitle=\"россия 24\" className=\"text-sm-left\" />\r\n                </Row>\r\n                <Row>\r\n                    {media_video}\r\n                </Row>\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\"  title=\"Новые газеты сегодня\" subtitle=\"Today\" className=\"text-sm-left\" />\r\n                </Row>\r\n\r\n                \r\n                <br />\r\n                <Row>\r\n                    <Grid gutter={10} columnWidth={300} rowHeight={10}>\r\n\r\n\r\n                        {this.props.post.Posts.map((post, idx) => (\r\n\r\n                            <GridItem lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\" key={idx}>\r\n                                <Card small className=\"card-post card-post--1\">\r\n                                    <div\r\n                                        className=\"card-post__image\"\r\n                                        style={{ backgroundImage: `url(${post.urlToImage})` }}\r\n                                    >\r\n                                        <Badge\r\n                                            pill\r\n                                            className={`card-post__category`}\r\n                                            theme=\"warning\"\r\n                                        >\r\n                                            {post.source.name}\r\n                                        </Badge>\r\n\r\n                                    </div>\r\n                                    <CardBody>\r\n                                        <h5 className=\"card-title text-fiord-blue\">\r\n\r\n                                                {post.title}\r\n                                       \r\n                                        </h5>\r\n                                        <p className=\"card-text d-inline-block mb-3\">{post.description}     <Link to=\"/\" name={post.url} target=\"_blank\" onClick={(event) => { event.preventDefault(); window.open(event.target.name); }} > View more</Link></p>\r\n                                        <br /><span className=\"text-muted\">{new Date(post.publishedAt).toGMTString()}</span>\r\n                                    </CardBody>\r\n\r\n                                    <CardFooter>\r\n                                        <Button outline pill theme=\"info\" onClick={() => this.Speech(post.title + \". \" + post.description)}><i className=\"material-icons\">\r\n                                            volume_up\r\n</i> Listen</Button>\r\n                                    </CardFooter>\r\n                                </Card>\r\n                            </GridItem>\r\n                        ))}\r\n                    </Grid>\r\n                </Row>\r\n          \r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    _getPosts: () => { dispatch(mediaActions.getListPost()) }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(home)\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row,\r\n         Col, FormInput,\r\n         ListGroupItem,\r\n         ListGroup, \r\n         CardHeader,\r\n         Alert, \r\n         Card, \r\n         FormSelect,\r\n         CardBody, \r\n         Button, \r\n         FormGroup, \r\n         Form, \r\n         FormCheckbox, \r\n         InputGroupAddon,\r\n         InputGroup ,\r\n         Badge,\r\n         ButtonGroup} from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { Redirect} from \"react-router-dom\"\r\nimport YouTube from 'react-youtube';\r\nimport { Player } from 'video-react';\r\nimport toast from 'toasted-notes' \r\nimport UploadFileToFirebase from \"./../firebase/uploadFileToFirebase\";\r\nimport {testActions} from './../Redux/Actions';\r\nimport {connect} from \"react-redux\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport axios from \"axios\";\r\nimport { config } from \"./../config\";\r\n\r\nclass addVideo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idTest:'',\r\n            status:true,\r\n            index: -1 ,\r\n            url_video: \"\",\r\n            type: \"\",\r\n            lever:\"A1\",\r\n            coverImage: \"\",\r\n            questions: [],\r\n            question: \"\",\r\n            description:\"\",\r\n            title:\"\",\r\n            timeTest: '00:15:00',\r\n            answers: [{ answer: \"\", result: false, id: Math.floor(Math.random() * 100000) }],\r\n        };\r\n\r\n    }\r\n    \r\n    componentWillMount = () => {\r\n        const id = this.props.location.state ? this.props.location.state.id : null;\r\n        if (id) {\r\n            const token = localStorage.getItem(\"accessToken\");\r\n            if (token) {\r\n                axios(config.UrlServerBase + \"test/getById/\" + id, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json;charset=UTF-8',\r\n                        \"Access-Control-Allow-Origin\": \"*\",\r\n                        'Authorization': \"Bearer \" + token\r\n\r\n                    }\r\n                }).then(resp => {\r\n\r\n                    if (!resp.data.err) {\r\n                       \r\n                        this.setState(pre => ({\r\n                            ...pre, pageTitle: \"изменить тест\",\r\n                            text: test.url_media,\r\n                            description: test.description,\r\n                            timeTest: test.timeTest,\r\n                            lever: test.lever,\r\n                            title: test.title,\r\n                            status: test.status,\r\n                            questions: test.questions,\r\n                            idTest: id,\r\n                            type:test.type,\r\n                            url_video: test.url_media,\r\n                            coverImage: test.coverImage\r\n                        }))\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    changeHandle = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n    answerInputHandle = e => {\r\n        const id = e.target.id;\r\n        const answers = this.state.answers;\r\n        answers[id].answer = e.target.value;\r\n        this.setState({ ...this.state, answers });\r\n\r\n    }\r\n    checkboxHandle(id) {\r\n        const answers = this.state.answers;\r\n        answers[id].result = !answers[id].result;\r\n        this.setState({ ...this.state, answers });\r\n    }\r\n    getFileUrlVideo = url => {\r\n        this.setState({ ...this.state, url_video: url });\r\n    }\r\n    getFileUrlImage = url => {\r\n        this.setState({ ...this.state, coverImage: url });\r\n    }\r\n\r\n    addQuestion = () => {\r\n        const questions = this.state.questions;\r\n        const answers = this.state.answers;\r\n        const question = this.state.question;\r\n        const index =  this.state.index;\r\n        index < 0 ? questions.push({ number: questions.length + 1, question, answers }) : questions[index] = {number:index +1,  question,answers}\r\n        this.setState({...this.state,questions,answers:[],question:'',index:-1})\r\n    }\r\n\r\n    addAnswer = ()=>{\r\n        const answers = this.state.answers;\r\n        answers.push({ answer: \"\", result: false, id: Math.floor(Math.random() * 100000)})\r\n        this.setState({ ...this.state, answers });\r\n    }\r\n    deleteAnswer(id){\r\n        const answers = this.state.answers;\r\n         answers.splice(id,1);\r\n        this.setState({ ...this.state, answers });\r\n    }\r\n\r\n    DeleteQuestion(id){\r\n        const questions = this.state.questions;\r\n        questions.splice(id, 1);\r\n        this.setState({...this.state,questions})\r\n    }\r\n    EditQuestion(id){\r\n        const question = this.state.questions[id];\r\n        this.setState({ ...this.state, answers:question.answers,question:question.question,index:id });\r\n       \r\n    }\r\n    Reset = ()=>{\r\n        this.setState({...this.state, question: \"\",\r\n        answers: [{ answer: \"\", result: false, id: Math.floor(Math.random() * 100000) }]})\r\n    }\r\n    saveToDatabase = ()=>{\r\n        const { idTest,url_video, questions,lever, coverImage, timeTest, description,  title, type , status} = this.state;\r\n   \r\n        if (!url_video || !questions || !description || !title|| !type){\r\n            toast.notify(()=> <Alert theme= \"danger\">Пожалуйста, добавьте данные к этому уроку !</Alert>,{position:'top',duration:2000});   \r\n        }else{\r\n            const test = { url_media: url_video, lever, questions, coverImage, timeTest, description, title, type, status} ;\r\n            if (!idTest)\r\n                this.props._addTest(test);\r\n            else {\r\n                test[\"id\"] = idTest;\r\n                this.props._updateTest(test);\r\n            }\r\n        \r\n        }\r\n    }\r\n    resetState = () => {\r\n        if (this.props.test.update_status)\r\n            this.props._resetResult();\r\n    }\r\n    render() {\r\n      \r\n        if (this.props.test.result) {\r\n            toast.notify(\"Успешно сохранено в базе данных !\", { position: 'top', duration: 2000 });\r\n            return <Redirect to={{ pathname: \"/send\", state: { id: this.props.test.id } }} />\r\n        }\r\n        const _id = this.state.url_video ? this.state.url_video.split(\"=\")[1].split(\"&\")[0] : \"\";\r\n        return (\r\n\r\n            <Container fluid className=\"main-content-container px-4 pb-4\">\r\n\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle sm=\"4\" title=\"Add Video\" className=\"text-sm-left\" />\r\n                </Row>\r\n                \r\n                {\r\n                    this.props.test.update_status && <SweetAlert success title=\"Уведомление\" onConfirm={() => this.resetState()}>\r\n                        Успешно сохранено в базе данных !\r\n                       </SweetAlert>\r\n\r\n                }\r\n              <Row>\r\n                <Col lg=\"6\" md=\"12\">\r\n                  <FormGroup>\r\n                    <FormInput invalid={this.state.title === ''} className=\"mb-3\" name=\"title\" value={this.state.title} placeholder=\"Your test title\" onChange={this.changeHandle} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FormInput invalid={this.state.description === ''} className=\"mb-3\" name=\"description\" value={this.state.description} placeholder=\"Your test description\" onChange={this.changeHandle} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"12\">\r\n                  <ButtonGroup>\r\n                     <label> Время теста (*часы: минуты: секунды) :</label>\r\n                    <TimeField style={{ width: \"25%\", fontSize:\"20px\", margin:\"0 0 10px 50px\" }} showSeconds className=\"mb-3\" name=\"timeTest\" value={this.state.timeTest} onChange={this.changeHandle} />\r\n                   </ButtonGroup>\r\n                  <FormGroup>\r\n                            <FormSelect invalid={this.state.lever === ''} value={this.state.lever} name=\"lever\" onChange={this.changeHandle} >\r\n                      <option value=\"\">choose your lever</option>\r\n                      <option value=\"A1\">Lever A1</option>\r\n                      <option value=\"A2\">Lever A2</option>\r\n                      <option value=\"B1\">Lever B1</option>\r\n                      <option value=\"B2\">Lever B2</option>\r\n                      <option value=\"C1\">Lever C1</option>\r\n                      <option value=\"C2\">Lever C2</option>\r\n                      <option value=\"D1\">Lever D1</option>\r\n                      <option value=\"D2\">Lever D2</option>\r\n                    </FormSelect>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n          <Row>\r\n          \r\n        \r\n             <Col lg=\"4\" md=\"12\">\r\n                        <Card small className=\"mb-3\">\r\n                            <CardHeader className=\"border-bottom\">\r\n                            <h6 className=\"m-0\">Add Link Youtube</h6>\r\n                            <br/>\r\n                         \r\n                                <FormGroup>\r\n                                    <FormSelect name=\"type\" value={this.state.type} onChange={this.changeHandle}>\r\n                                        <option value=\"\">Выберите тип данных </option>\r\n                                        <option value=\"mp4_or_mp3\">Link Video Or Mp3</option>\r\n                                        <option value=\"youtube\">Link Youtube</option>\r\n                                    </FormSelect>\r\n                                </FormGroup>\r\n                                {this.state.type ? <FormGroup>\r\n                                    {\r\n                                        this.state.type === \"mp4_or_mp3\" ? <UploadFileToFirebase fileName=\"videoOrAudio\" title=\"Загрузить видео или прослушать файлы\" getFileUrl={this.getFileUrlVideo} /> : \"\"\r\n                                    }\r\n\r\n                                    <FormInput placeholder=\"Ссылка на видео или аудио файл ...\" name=\"url_video\" value={this.state.url_video} onChange={this.changeHandle} />\r\n                                </FormGroup> : \"\"}\r\n\r\n                                {this.state.type === \"mp4_or_mp3\" ? <FormGroup>\r\n                                    <UploadFileToFirebase fileName=\"images\" title=\"Загрузить изображение обложки\" getFileUrl={this.getFileUrlImage} />\r\n                                    <FormInput placeholder=\"Ссылка на изображение обложки... \" value={this.state.coverImage} name=\"coverImage\" onChange={this.changeHandle} />\r\n                                </FormGroup> : \"\"}\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\"p-3\">\r\n                                {this.state.type === \"mp4_or_mp3\" ? <Player\r\n                                    playsInline\r\n                                    poster={this.state.coverImage}\r\n                                    src={this.state.url_video}\r\n                                /> : this.state.type === \"youtube\" ? <YouTube opts={{ width: \"100%\", height: \"300px\" }}\r\n                                    videoId={_id}\r\n                                /> : <Alert > Loading ...... </Alert>}\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n\r\n                    <Col lg=\"8\" md=\"12\">\r\n\r\n                        <Card small className=\"mb-3\">\r\n                            <CardHeader className=\"border-bottom\">\r\n                                <h6 className=\"m-0\">Add questions</h6>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\"p-2\" style={{ backgroundColor: \"#232323\" }}>\r\n                                <Form>\r\n\r\n                                    <FormGroup>\r\n                                        <FormInput name=\"question\" value={this.state.question} onChange={this.changeHandle} placeholder=\"Question\" />\r\n                                    </FormGroup>\r\n                                    {this.state.answers.map((val, isx) => (\r\n                                        <InputGroup key={isx} className=\"mb-2\">\r\n                                            <InputGroupAddon type=\"append\">\r\n                                                <FormCheckbox checked={val.result} onChange={e => { this.checkboxHandle(isx) }} />\r\n                                            </InputGroupAddon>\r\n                                            <FormInput id={isx} name={val.id} value={val.answer} onChange={this.answerInputHandle} placeholder={'Answer ' + isx} />\r\n                                            <Button onClick= {()=>{this.deleteAnswer(isx)}} style={{marginLeft:\"5px\"}} outline theme=\"warning\"> <i className=\"material-icons\">delete_outline</i></Button>\r\n                                        </InputGroup>\r\n                                    ))}\r\n                                    <br />\r\n                                    <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                                        <Button outline theme=\"light\" size=\"sm\" onClick={this.addAnswer}>\r\n                                        <i className=\"material-icons\">add</i> Add Answer\r\n                                           \r\n                                        </Button>\r\n                                        <Button theme=\"warning\" outline size=\"sm\" onClick={this.Reset} className=\"ml-auto\">\r\n                                            <i className=\"material-icons\">close</i> Reset\r\n                                        </Button>\r\n                                        <Button theme=\"accent\" outline size=\"sm\" onClick={this.addQuestion} className=\"ml-auto\">\r\n                                            <i className=\"material-icons\">save</i> Save To List\r\n                                        </Button>\r\n                                    </ListGroupItem>\r\n                                   \r\n                                </Form>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Card small className=\"mb-4\">\r\n                            <CardHeader className=\"border-bottom\">\r\n                                <h6 className=\"m-0\">List questions</h6>\r\n                            </CardHeader>\r\n\r\n                            <CardBody className=\"p-2\">\r\n                            <ListGroup className=\"text-lg-center\">\r\n                                {this.state.questions.map((question,i)=>(                    \r\n                                        <ListGroupItem key={i}>\r\n                                        <h5 className=\"text-left\">{question.question}</h5>\r\n                                        {question.answers.map((answer,i)=>(\r\n                                            <Badge key={i} style={{marginRight:\"10px\"}} theme={answer.result?\"success\":\"dark\"}>{answer.answer}</Badge>\r\n                                        ))}\r\n                                        <Button onClick={()=>{this.DeleteQuestion(i)}} style={{position:\"absolute\",top:\"5px\", right:\"55px\"}} outline theme=\"warning\"> <i className=\"material-icons\">delete_outline</i></Button>\r\n                                        <Button onClick={()=>{this.EditQuestion(i)}} outline style={{position:\"absolute\",top:\"5px\", right:\"5px\"}}> <i className=\"material-icons\">edit</i></Button>\r\n                                        </ListGroupItem>\r\n                                ))}\r\n                             </ListGroup>\r\n                                   <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                                    <FormCheckbox\r\n                                        checked={this.state.status}\r\n                                        onChange={() => this.setState({ status: !this.state.status })}\r\n                                    >\r\n                                        Public Test\r\n                                    </FormCheckbox>\r\n                                        <Button theme=\"accent\" onClick={this.saveToDatabase} outline size=\"sm\"  className=\"ml-auto\">\r\n                                            <i className=\"material-icons\">save</i> Save To Database\r\n                                        </Button>\r\n                                    </ListGroupItem>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    test: state.test\r\n  })\r\n  const mapDispatchToProps = dispatch =>({\r\n    _addTest: test =>{dispatch(testActions.addTest(test))},\r\n      _updateTest: test => { dispatch(testActions.updateTest(test)) },\r\n      _resetResult: () => { dispatch({ type: \"RESET_TEST\" }) }\r\n  })\r\n  export default connect(mapStateToProps,mapDispatchToProps)(addVideo);\r\n\r\n","import React ,{Component}from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  ButtonGroup,\n  Button,\n  Row,\n  Col,\n  FormInput\n} from \"shards-react\";\n\nclass Discussions extends Component {\n  render(){\n    return (\n      <Card small className=\"blog-comments\">\n        <CardHeader className=\"border-bottom\">\n          <h5 className=\"m-0\">MANAGE STUDENT</h5>\n          <ButtonGroup style={{width:\"100%\",marginTop:\"10px\"}}>\n              <FormInput  name=\"message\" placeholder=\"Search ID.....\"/>\n              <Button > Search </Button>\n          </ButtonGroup>\n        </CardHeader>\n    \n        <CardBody className=\"p-0\">\n          {this.props.students && this.props.students.map((student, idx) => (\n            <div key={idx} className=\"blog-comments__item d-flex p-3\">\n              {/* Avatar */}\n              <div className=\"blog-comments__avatar mr-3\">\n                <img src={student.urlAvatar?student.urlAvatar:require(\"./../../images/avatars/userAvatar.png\")} alt={student.name} />\n              </div>\n    \n              {/* Content */}\n              <div className=\"blog-comments__content\">\n                {/* Content :: Title */}\n                <div className=\"blog-comments__meta text-mutes\">\n                  <h3>{student.name}</h3>\n                  <a className=\"text-secondary\" href={student._id}>\n                  {student.email}\n                  </a>{\" \"}\n                  on{\" \"}\n                  <span className=\"text-mutes\">- {new Date(student.date_create).toGMTString()}</span>\n                </div>\n    \n                {/* Content :: Body */}\n                <p className=\"m-0 my-1 mb-2 text-muted\">{\"abc\"}</p>\n    \n                {/* Content :: Actions */}\n                <div className=\"blog-comments__actions\">\n                  <ButtonGroup size=\"sm\">\n                    <Button theme=\"white\">\n                      <span className=\"text-success\">\n                        <i className=\"material-icons\">check</i>\n                      </span>{\" \"}\n                      Approve\n                    </Button>\n                    <Button theme=\"white\">\n                      <span className=\"text-danger\">\n                        <i className=\"material-icons\">clear</i>\n                      </span>{\" \"}\n                      Reject\n                    </Button>\n                    <Button theme=\"white\">\n                      <span className=\"text-light\">\n                        <i className=\"material-icons\">more_vert</i>\n                      </span>{\" \"}\n                      Edit\n                    </Button>\n                  </ButtonGroup>\n                </div>\n              </div>\n            </div>\n          ))}\n        </CardBody>\n    \n        <CardFooter className=\"border-top\">\n          <Row>\n            <Col className=\"text-center view-report\">\n              <Button theme=\"white\" type=\"submit\">\n                View All Comments\n              </Button>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n} \n\n\nexport default Discussions;\n","import React, { Component } from \"react\";\nimport { Container, Card, CardBody, Row, Col } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\nimport PageTitle from \"./../components/common/PageTitle\";\nimport { config } from \"./../config\";\nimport axios from \"axios\";\nimport UserInfo from \"../components/Info/UserInfo\";\n// import NewDraft from \"../components/Info/NewDraft\";\nimport Discussions from \"../components/Info/Discussions\";\n// import TopReferrals from \"./../components/common/TopReferrals\";\n\nclass TeacherDashBoard extends Component {\n  constructor(){\n    super();\n    this.state ={\n      _manaStudent: null\n    }\n    }\n  componentWillMount = ()=>{\n    \n    const _mana = JSON.parse(sessionStorage.getItem(\"_manageStudents\"));\n        if(!_mana){\n            const  token =  localStorage.getItem(\"accessToken\"); \n            if (token) {\n              axios(config.UrlServerBase + \"user/getStudents\", {\n                  headers: {\n                    'Content-Type': 'application/json;charset=UTF-8',\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    'Authorization': \"Bearer \" + token\n                  \n                }}).then(resp => {\n                  if(!resp.data.message){\n                    sessionStorage.setItem(\"_manageStudents\",JSON.stringify(resp.data));\n                    this.setState({_manaStudent:resp.data})\n                  }\n                })\n            }\n        }\n       else{\n        this.setState({_manaStudent:_mana})\n    }\n  }\n  render() {\n    return (<Container fluid className=\"main-content-container px-4\">\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle title=\"Dashboard\" className=\"text-sm-left mb-3\" />\n      </Row>\n\n      <Row>\n        <Col className=\"col-lg mb-4\" >\n          <Link to={{ pathname: \"/media\", state: { data: \"test\" } }} >\n            <Card style={{ background: \"linear-gradient(to top left, #FAECD5, #CAE4D8)\" }} small className=\"stats-small\">\n              <CardBody className=\"p-0 d-flex\">\n                <div className=\"flex-column m-auto text-center\">\n\n                  <h5 className=\" text-uppercase\">Testing</h5>\n                 \n\n                </div>\n              </CardBody>\n            </Card>\n          </Link>\n        </Col>\n        <Col className=\"col-lg mb-4\" >\n          <Link to={{ pathname: \"/media\", state: { data: \"youtube\" } }} >\n            <Card style={{ background: \"linear-gradient(to top left, powderblue, pink)\" }} small className=\"stats-small\">\n              <CardBody className=\"p-0 d-flex\">\n                <div className=\"flex-column m-auto text-center\">\n\n                  <h5 className=\" text-uppercase\">Video Test</h5>\n               \n\n                </div>\n              </CardBody>\n            </Card>\n          </Link>\n        </Col>\n        <Col className=\"col-lg mb-4\" >\n          <Link to={{ pathname: \"/media\", state: { data: \"mp4_or_mp3\" } }} >\n            <Card style={{ background: \"linear-gradient(to top left, #FAECD5, #CAE4D8)\" }} small className=\"stats-small\">\n              <CardBody className=\"p-0 d-flex\">\n                <div className=\"flex-column m-auto text-center\">\n\n                  <h5 className=\" text-uppercase\">mp4_or_mp3</h5>\n                  \n\n                </div>\n              </CardBody>\n            </Card>\n          </Link>\n        </Col>\n      </Row>\n\n\n      <Row>\n        {/* Users Overview */}\n        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <Discussions students = {this.state._manaStudent}/>\n        </Col>\n\n        {/* Users by Device */}\n        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n          <UserInfo />\n        </Col>\n\n        {/* New Draft */}\n        {/* <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n          <NewDraft />\n        </Col> */}\n\n        {/* Discussions */}\n        {/* <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <NewDraft />\n        </Col> */}\n\n        {/* Top Referrals */}\n        {/* <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <TopReferrals />\n        </Col> */}\n      </Row>\n    </Container>\n    );\n\n  }\n}\n\n\n\nexport default TeacherDashBoard;\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Card, CardBody, Row, Col ,Button,CardFooter,ListGroupItem,ListGroup} from \"shards-react\";\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\n\r\nimport axios from \"axios\";\r\nimport {config} from \"./../config\";\r\n\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n class mediaList extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listTest:[],\r\n            token :localStorage.getItem(\"accessToken\"),\r\n            idTest:\"\",\r\n            showAlert:false,\r\n            _id:\"\",\r\n            id_view:\"\",\r\n            type:\"\"\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.loadData();\r\n    }\r\n    loadData = ()=>{\r\n        const { token } = this.state;\r\n        const type = this.props.location.state ? this.props.location.state.data : \"\";\r\n        if (token) {\r\n            axios(config.UrlServerBase + \"exam/\" + type, {\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Authorization': \"Bearer \" + token\r\n\r\n                }\r\n            }).then(resp => {\r\n                if (!resp.data.message)\r\n                    this.setState({ listTest: resp.data ,type});\r\n            })\r\n        }\r\n    }\r\n    View = id=>{\r\n        this.setState({idTest:id});\r\n\r\n    }\r\n    deleteTest =()=>{\r\n        const { _id, token} = this.state;\r\n       \r\n        if (token) {\r\n            axios(config.UrlServerBase + \"test\", {\r\n                method: \"DELETE\",\r\n                data: { id: _id },\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    'Authorization': \"Bearer \" + token\r\n                }\r\n            }).then(resp => {\r\n                if (!resp.data.err){\r\n                    this.loadData();\r\n                    this.setState({ showSuccess: true, showAlert: false });\r\n                }\r\n                    \r\n            });\r\n        }\r\n    }\r\n    render() {\r\n   \r\n       if(this.state.id_view){\r\n           if (this.state.type === \"test\")\r\n              return <Redirect to={{ pathname: '/add-test', state: { id: this.state.id_view } }} />;\r\n           else\r\n               return <Redirect to={{ pathname: '/add-video', state: { id: this.state.id_view } }} />; \r\n       }\r\n          \r\n       if(this.state.idTest)\r\n           return <Redirect to={{pathname:\"/send\", state :{id:this.state.idTest}}}/>\r\n        return (\r\n            <Container style={{ minHeight: \"800px\" }} fluid className=\"main-content-container px-4\">\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle title=\"Media List\" className=\"text-sm-left mb-3\" />\r\n                </Row>\r\n                {\r\n                    this.state.showAlert && <SweetAlert\r\n                        info\r\n                        showCancel\r\n                        confirmBtnText=\"удалить\"\r\n                        confirmBtnBsStyle=\"danger\"\r\n                        cancelBtnBsStyle=\"default\"\r\n                        title=\"Ты уверен?\"\r\n                        onConfirm={this.deleteTest}\r\n                        onCancel={() => this.setState({ showAlert: false })}\r\n                    >\r\n                       Вы хотите удалить этот тест?\r\n                 </SweetAlert>\r\n                }\r\n                {\r\n                    this.state.showSuccess && <SweetAlert success title=\"Уведомление\" onConfirm={()=>this.setState({showSuccess:false})}>\r\n                         Операция выполнена успешно !\r\n                       </SweetAlert>\r\n\r\n                }\r\n                <Row>\r\n                    {this.state.listTest.map((test, idx) => (\r\n                        <Col lg=\"4\" key={idx} style={{marginTop:\"10px\"}}>\r\n                                <Card small className=\"card-post h-100\">\r\n                                    <div\r\n                                    className=\"card-post__image\"\r\n                                    style={{ backgroundImage: `url('${test.type===\"test\"? require(\"./../images/system/test.jpg\"): require(\"./../images/system/media.jpg\")}')` }}\r\n                                    />\r\n                                    <CardBody>\r\n                                    <h5 className=\"card-title\">\r\n                                        <h3 className=\"text-fiord-blue\">\r\n                                        {test.title}\r\n                                        </h3>\r\n                                    </h5>\r\n                                    <p className=\"card-text\">{test.description}</p>\r\n                                   \r\n                                    <p>дата создания : <small className=\"text-muted\">{new Date(test.date_create).toGMTString() }</small></p>\r\n                                   \r\n                                    </CardBody>\r\n                                   <CardFooter>\r\n                                   <ListGroup>\r\n                                         <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                                            <Button outline theme=\"accent\" size=\"sm\" onClick={() => this.setState({ id_view: test.id_link})}>\r\n                                                <i className=\"material-icons\">remove_red_eye</i> View\r\n                                        </Button>\r\n                                            <Button outline theme=\"warning\" size=\"sm\" onClick={() => { this.setState({ showAlert: true, _id: test.id_link})}} >\r\n                                                <i className=\"material-icons\">delete_forever</i> Delete\r\n                                        </Button>\r\n                                        <Button theme=\"accent\" size=\"sm\" className=\"ml-auto\" onClick={()=>{this.View(test.id_link)}}>\r\n                                            <i className=\"material-icons\">send</i> Send\r\n                                        </Button>\r\n                                        </ListGroupItem>\r\n                                    </ListGroup>\r\n                                   </CardFooter>\r\n                                </Card>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <br/>\r\n                <br />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default mediaList;","import React, {Component} from 'react'\r\n\r\nexport default class timeDown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        const time_arr = props.time.split(\":\");\r\n        this.state = {\r\n            hour: parseInt(time_arr[0]),\r\n            minute: parseInt(time_arr[1]) ,\r\n            second: parseInt(time_arr[2]) \r\n        }\r\n\r\n    }\r\n   //00:00:00\r\n    render() {\r\n        const norm = {\r\n            display: \"inline-block\",\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            right: '2px',\r\n            border: '3px green solid',\r\n            padding: '5px',\r\n            color: 'green',\r\n            top: '0',\r\n            height: '100%'\r\n           }\r\n\r\n        const danger = {\r\n            display: \"inline-block\",\r\n            fontSize: '30px',\r\n            position: 'absolute',\r\n            right: '2px',\r\n            border: '3px red solid',\r\n            padding: '5px',\r\n            color: 'red',\r\n            top: '0',\r\n            height: '100%'\r\n        }\r\n        const { hour, minute, second } = this.state;\r\n        return (\r\n            <div style={hour + minute === 0 && second < 30 ? danger : norm}>\r\n                <b>{hour< 10 ? '0' + hour:hour} : {minute < 10? '0'+minute:minute }: {second<10? '0'+second:second} </b>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.timer = setInterval(() => {\r\n            var { hour, minute, second } = this.state;\r\n            if (hour >= 0) {\r\n                if (minute > 0) {\r\n                    if (second === 0) {\r\n                        minute--;\r\n                        second = 59;\r\n                    } else second--;\r\n                }else if (minute === 0) {\r\n                    if (second === 0) {\r\n                        if (hour === 0) {\r\n                           this.props.stop()\r\n                        }else{\r\n                            hour--;\r\n                            minute = 59;\r\n                            second = 59;\r\n                        }\r\n                      \r\n                    } else second--;\r\n                }\r\n            }\r\n            this.setState(() => ({ hour, minute, second}))\r\n            }, 1000);\r\n     \r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n   \r\n   \r\n}","import React, {Component} from \"react\";\r\nimport { Container, Collapse, Alert, Row, Button, Col, ListGroupItem, ListGroup, Modal,ModalBody,ModalFooter ,ModalHeader, Badge } from \"shards-react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport YouTube from 'react-youtube';\r\nimport {Link} from \"react-router-dom\"\r\nimport { Player } from 'video-react';\r\nimport TimeDown from './TimeDown';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport {connect} from 'react-redux';\r\nimport {testActions} from './../../Redux/Actions';\r\nimport tickImg from \"./../../images/system/tick.jpg\";\r\nimport failImg from \"./../../images/system/Fail.png\"\r\nclass videoTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: [],\r\n            collapse: false,\r\n            showAlert:false,\r\n            open:false,\r\n            start:false\r\n          \r\n        }\r\n    }\r\n    toggle  = () =>{\r\n        this.setState({ collapse: !this.state.collapse,start:true });\r\n    }\r\n    answerHandle(id, e) {\r\n        e.target.classList.toggle(\"badge-primary\");\r\n        e.target.classList.toggle(\"badge-danger\");\r\n        const number = parseInt(e.target.parentNode.id);\r\n        const { answers } = this.state;\r\n        var questionOld = answers.find(q => q.number === number);\r\n        if (questionOld) {\r\n            const index = questionOld.answers.find(q => q.id === id);\r\n            if (!index)\r\n                questionOld.answers.push({ id });\r\n            else\r\n                questionOld.answers = questionOld.answers.filter(q=>q.id!==id);\r\n        } else\r\n            answers.push({ number: number, answers: [{ id: id }] });\r\n\r\n        this.setState({ answers });\r\n        //clientAnswer , id\r\n    }\r\n\r\n    stop=()=>{\r\n        this.onConfirm();\r\n    }\r\n    onConfirm=()=>{\r\n        \r\n        const test = { id: this.props.id, clientAnswers: this.state.answers };\r\n        \r\n        this.props._checkTest(test);\r\n        this.setState({ showAlert: false });\r\n    }\r\n    toggleResult=()=>{\r\n        this.setState({open:false});\r\n    }\r\n    componentWillUnmount = () => {\r\n        if (this.props.response)\r\n            this.props._resetResult();\r\n    }\r\n    render(){\r\n        \r\n        const result = this.props.response;\r\n     \r\n        let open = this.state.open;\r\n        if (result){\r\n            open = true;\r\n        }\r\n  \r\n        return(\r\n            <Container fluid className=\"main-content-container\">\r\n               { \r\n                 this.state.showAlert && <SweetAlert\r\n                    info\r\n                    showCancel\r\n                    confirmBtnText=\"Отправить !\"\r\n                    confirmBtnBsStyle=\"danger\"\r\n                    cancelBtnBsStyle=\"default\"\r\n                    title=\"Ты уверен?\"\r\n                    onConfirm={this.onConfirm}\r\n                    onCancel={() => this.setState({ showAlert: false })}\r\n                >\r\n                    Вы хотите отправить свои ответы на сервер, чтобы проверить результаты ?\r\n                 </SweetAlert>\r\n                }\r\n\r\n\r\n                <Modal size=\"lg\" open={open} toggle={this.toggleResult}>\r\n                    <ModalHeader>Результат вашего теста</ModalHeader>\r\n                    <ModalBody>\r\n                        <ListGroup>\r\n                            {result && result.map((question, isx)=>(\r\n                                <ListGroupItem id={isx+1} key={isx} className=\"px-3 pb-2\">\r\n                                    <b style={{ \"fontWeight\": \"1000\", marginRight: \"10px\" }}>{isx + 1}{\" - \"}{question.question}</b>\r\n                                    <br />\r\n                                    <br />\r\n                                    {question.answers.map((val, i) => (\r\n                                        <Badge key={i} theme={\r\n                                            val.status === -1 ? \"danger\" : val.status===1 ?\"success\": val.status=== -2?\"warning\":\"light\"\r\n                                        } style={{ fontSize: \"16px\", margin: \"10px\" }}>\r\n                                            {i+ 1}{\" - \"} {val.answer}\r\n                                        </Badge>\r\n                                    ))}\r\n                                    <img alt=\"img\" style={{ position: \"absolute\", width: \"50px\",top:\"5px\", right: \"10px\" }} src={question.status? tickImg:failImg}/>\r\n                                </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Link to=\"/\"> Go Home Page </Link>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Row>\r\n                    <Col  lg=\"4\" sm=\"12\">\r\n                        {this.props.test && this.props.test.type === \"mp4_or_mp3\" ? <Player\r\n                            playsInline\r\n                            poster={this.props.test.coverImage}\r\n                            src={this.props.test.url_media}\r\n                        /> : this.props.test.type === \"youtube\" ? <YouTube opts={{ width: \"100%\", height: \"300px\" }}\r\n                                videoId={this.props.test.url_media ? this.props.test.url_media.split(\"=\")[1].split(\"&\")[0] : \"\"}\r\n                        /> : <Alert > Loading ...... </Alert>}\r\n                    </Col>\r\n                    <Col lg=\"8\" sm=\"12\" style={{ height: \"600px\", overflow: \"auto\" }}>\r\n                        <Scrollbars>\r\n                            <ListGroup>\r\n                                <ListGroupItem>\r\n                                    \r\n                                    <Button outline pill theme=\"dark\" onClick={this.toggle}>Ответь на вопросы</Button>\r\n                                    {this.state.start && <TimeDown time={this.props.test.timeTest}  stop={this.stop} />} \r\n                                </ListGroupItem>\r\n                                <Collapse open={this.state.collapse}>\r\n                                {this.props.test ? this.props.test.questions.map((question, isx) => (\r\n                                    <ListGroupItem id={isx + 1} key={isx} className=\"px-3 pb-2\">\r\n                                        <b style={{ \"fontWeight\": \"1000\", marginRight: \"10px\" }}>{isx + 1}{\" - \"}{question.question}</b>\r\n                                        <br/>\r\n                                        <br />\r\n                                        {question.answers.map((val, i) => (\r\n                                            <Badge onClick={e => { this.answerHandle(val.id, e) }} key={i} style={{ fontSize: \"16px\", margin: \"10px\", cursor: \"pointer\" }}>\r\n                                                {i + 1}{\" - \"} {val.answer}\r\n                                            </Badge>\r\n                                        ))}\r\n                                    </ListGroupItem>\r\n                                )) : <Alert > Loading ...... </Alert>}\r\n                                    <ListGroupItem  style={{ height: \"50px\" }}>\r\n                                        <Button style={{ position: \"absolute\", right: \"15px\" }} pill theme=\"success\" onClick={() => this.setState({ showAlert: true })}>Oтправить свои ответы</Button>\r\n                                    </ListGroupItem>\r\n                                </Collapse>\r\n                              \r\n                            </ListGroup>\r\n                        </Scrollbars>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    response: state.test.response\r\n})\r\n  const mapDispatchToProps = dispatch =>({\r\n      _checkTest: test => { dispatch(testActions.checkTest(test)) },\r\n      _resetResult: () => { dispatch({ type: \"RESET_TEST\" }) }\r\n  })\r\nexport default connect(mapStateToProps,mapDispatchToProps)(videoTest);","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, ListGroupItem, ListGroup, Badge, Button } from \"shards-react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport renderHTML from 'react-render-html';\r\nimport TimeDown from './TimeDown';\r\nimport { Link} from \"react-router-dom\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { connect } from 'react-redux';\r\nimport { testActions } from './../../Redux/Actions';\r\nimport tickImg from \"./../../images/system/tick.jpg\";\r\nimport failImg from \"./../../images/system/Fail.png\"\r\nclass test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: [],\r\n            showAlert: false,\r\n        }\r\n    }\r\n    answerHandle(id, e) {\r\n        e.target.classList.toggle(\"badge-primary\");\r\n        e.target.classList.toggle(\"badge-danger\");\r\n        const number = parseInt(e.target.parentNode.id);\r\n        const { answers } = this.state;\r\n        var questionOld = answers.find(q => q.number === number);\r\n        if (questionOld) {\r\n            const index = questionOld.answers.find(q => q.id === id);\r\n            if (!index)\r\n                questionOld.answers.push({ id });\r\n            else\r\n                questionOld.answers = questionOld.answers.filter(q => q.id !== id); \r\n        } else\r\n            answers.push({ number: number, answers: [{ id: id }] });\r\n\r\n        this.setState({ answers });\r\n    }\r\n    stop = ()=>{\r\n        this.onConfirm();\r\n    }\r\n    onConfirm = () => {\r\n\r\n        const test = { id: this.props.id, clientAnswers: this.state.answers };\r\n        this.props._checkTest(test);\r\n        this.setState({ showAlert: false });\r\n    }\r\n    componentWillUnmount = () =>{\r\n        if (this.props.response)\r\n          this.props._resetResult();\r\n    }\r\n    render() {\r\n        const result = this.props.response;\r\n      \r\n        const html = this.props.test ? this.props.test.url_media : \"<p>loading...</p>\";\r\n        let questions = this.props.test ? this.props.test.questions.map((question, isx) => (\r\n            <ListGroupItem id={question.number} key={isx} className=\"px-3 pb-2\">\r\n                <b style={{ \"fontWeight\": \"1000\", marginRight: \"10px\" }}>{question.number}</b>\r\n                {question.answers.map((val, i) => (\r\n                    <Badge onClick={e => { this.answerHandle(val.id, e) }} key={i} style={{ fontSize: \"16px\", marginRight: \"10px\", cursor: \"pointer\" }}>\r\n                        {val.answer}\r\n                    </Badge>\r\n                ))}\r\n            </ListGroupItem>\r\n        )) : \"loading..\";\r\n\r\n        questions = result ? result.map((question, isx) => (\r\n            <ListGroupItem id={isx + 1} key={isx} className=\"px-3 pb-2\">\r\n                <b style={{ \"fontWeight\": \"1000\", marginRight: \"10px\" }}>{question.number + \" - \"}</b>\r\n\r\n                {question.answers.map((val, i) => (\r\n                    <Badge key={i} theme={\r\n                        val.status === -1 ? \"danger\" : val.status === 1 ? \"success\" : val.status === -2 ? \"warning\" : \"light\"\r\n                    } style={{ fontSize: \"16px\", margin: \"10px\" }}>\r\n                        {' '} {val.answer} {' '}\r\n                    </Badge>\r\n                ))}\r\n                <img alt=\"img\" style={{ position: \"absolute\", width: \"50px\", top: \"5px\", right: \"10px\" }} src={question.status ? tickImg : failImg} />\r\n            </ListGroupItem>\r\n        )) : questions;\r\n\r\n        return (\r\n            <Container fluid className=\"main-content-container\">\r\n                {\r\n                    this.state.showAlert && <SweetAlert\r\n                        info\r\n                        showCancel\r\n                        confirmBtnText=\"Отправить !\"\r\n                        confirmBtnBsStyle=\"danger\"\r\n                        cancelBtnBsStyle=\"default\"\r\n                        title=\"Ты уверен?\"\r\n                        onConfirm={this.onConfirm}\r\n                        onCancel={() => this.setState({ showAlert: false })}\r\n                    >\r\n                        Вы хотите отправить свои ответы на сервер, чтобы проверить результаты ?\r\n                 </SweetAlert>\r\n                }\r\n                <Row noGutters className=\"page-header\" style={{height:\"50px\", position:\"relative\"}}>\r\n                    {this.props.test && !result? <TimeDown time={this.props.test.timeTest} stop={this.stop} />:\"\"}\r\n                </Row>\r\n                <Row>\r\n                    <Col style={{ height: \"600px\" }} lg=\"9\" sm=\"12\">\r\n                        <Scrollbars>\r\n                            {renderHTML(html)}\r\n                        </Scrollbars>\r\n\r\n                    </Col>\r\n                    <Col className=\"answer_css\" lg=\"3\" sm=\"12\" >\r\n                        <Scrollbars>\r\n                            <ListGroup style={{marginRight:\"30px\"}}>\r\n                                <ListGroupItem>\r\n                                    <h3 className=\"text-center\">Answers</h3>\r\n                                \r\n                                </ListGroupItem>\r\n\r\n                                {questions}\r\n                                <ListGroupItem style={{ height: \"50px\" }}>\r\n                                    {result ? <Link to=\"/\"> Go Home Page </Link>:<Button style={{ position: \"absolute\", right: \"15px\" }} pill theme=\"success\" onClick={() => this.setState({ showAlert: true })}>Oтправить свои ответы</Button>}\r\n                                   \r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n\r\n                        </Scrollbars>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    response: state.test.response\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    _checkTest: test => { dispatch(testActions.checkTest(test)) },\r\n    _resetResult: () => { dispatch({type:\"RESET_TEST\"})}\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(test);","import React from \"react\";\r\n\r\n// import axios from \"axios\";\r\n// import {config} from \"./../config\";\r\nimport {connect} from \"react-redux\";\r\nimport VideoTest from \"./mediaTest/videoTest\";\r\nimport Test from \"./mediaTest/Test\";\r\nimport {testActions} from \"./../Redux/Actions\";\r\n\r\n\r\n class test extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n       if(props.location.state)\r\n          props._getTest(props.location.state.id)\r\n        this.state = {\r\n            answers:[]\r\n        }\r\n    }\r\n   componentWillUnmount(){\r\n      sessionStorage.removeItem(\"notifications\") ;\r\n   }\r\n    render() {\r\n        return (\r\n          <div>\r\n                {this.props.test && this.props.test.type !== \"test\" ? <VideoTest id={this.props.location.state.id} test={this.props.test} /> : <Test id={this.props.location.state.id} test={this.props.test}/> }\r\n          </div>\r\n             \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    test:state.test.test\r\n})\r\nconst mapDispatchToProps = dispatch=>({\r\n    _getTest: id =>{dispatch(testActions.getTest(id))}\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(test);","import React,{Component} from \"react\";\r\n\r\nimport {Container, Row, Col,CardBody,Card,Button, FormInput,FormGroup,FormTextarea} from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\nimport axios from \"axios\";\r\nimport {config} from \"./../../config\";\r\nimport toast from 'toasted-notes' \r\nclass sendTest extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            students:JSON.parse(sessionStorage.getItem(\"_manageStudents\")),\r\n            message:\"\",\r\n            idTest:props.location.state ? props.location.state.id:\"\",\r\n            token :localStorage.getItem(\"accessToken\")\r\n        }\r\n    }\r\n     \r\n      handleOnSubmit=e=>{\r\n          e.preventDefault();\r\n          let data= {idTest:this.state.idTest,receivers:[{idReceiver:e.target[0].value,email:e.target[1].value}],message:e.target[2].value}\r\n         this.sendMail(data)\r\n          \r\n      }\r\n      handleOnSubmitAll= e=>{\r\n        e.preventDefault();\r\n        let data= {idTest:this.state.idTest,receivers:this.state.students.map(val=>{\r\n            return {idReceiver:val._id,email:val.email}\r\n        }),message:e.target[0].value}\r\n        this.sendMail(data);\r\n      }\r\n\r\n      sendMail(data){\r\n        const  {token} = this.state;\r\n        if (token) {\r\n           \r\n            axios(config.UrlServerBase + \"exam/sendTest\", {\r\n              method:\"post\",\r\n              data: data,\r\n              headers: {\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                'Authorization': \"Bearer \" + token\r\n              \r\n            }}).then(resp => {\r\n              if(resp.data===\"success\")\r\n                toast.notify(\"Отправить успешно !\" ,{position:'top',duration:2000}); \r\n            })\r\n          }\r\n      }\r\n    render(){\r\n      \r\n        return (\r\n            <Container>\r\n               <Row noGutters className=\"page-header py-4\">\r\n               <PageTitle sm=\"4\"  style={{color:\"#fff\"}} title=\"Send Test To Students\" subtitle=\"*******\" className=\"text-sm-left\" />\r\n             </Row>\r\n            \r\n                <Row>\r\n            {this.state.students.map((student, idx) => (\r\n              <Col lg=\"4\" key={idx}>\r\n                <Card small className=\"card-post mb-4\">\r\n                  <CardBody>\r\n                    <div className=\"card-post__author d-flex\">\r\n                      <div\r\n                      \r\n                        className=\"card-post__author-avatar card-post__author-avatar--small\"\r\n                        style={{ backgroundImage: `url('${student.urlAvatar?student.urlAvatar: require(\"./../../images/avatars/userAvatar.png\")}')` }}\r\n                      >\r\n                       \r\n                      </div>\r\n                      <div className=\"d-flex flex-column justify-content-center ml-3\">\r\n                        <span className=\"card-post__author-name\">\r\n                          {student.name}\r\n                        </span>\r\n                        <span className=\"card-post__author-name\">\r\n                          {student.email}\r\n                        </span>\r\n                        <small className=\"text-muted\">{new Date(student.date_create).toGMTString() }</small>\r\n                      </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <form onSubmit={this.handleOnSubmit}>\r\n                           \r\n                            <input type=\"hidden\" value={student._id}/>\r\n                            <input type=\"hidden\" value={student.email}/>\r\n                            <FormGroup>\r\n                                <FormInput  name=\"message\" placeholder=\"Message.....\"/>\r\n                            </FormGroup>\r\n                            <div className=\"my-auto ml-auto\">\r\n                            <Button type=\"submit\" size=\"sm\" theme=\"white\">\r\n                                <i className=\"far fa-send mr-1\" /> Send\r\n                            </Button>\r\n                            </div>\r\n                    </form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row style={{marginTop:\"40px\",marginBottom:\"60px\", backgroundColor:\"#454545\", padding:\" 15px 15px 60px 15px\" ,position:\"relative\"}}>\r\n          <form style={{width:\"100%\"}} onSubmit={this.handleOnSubmitAll}>\r\n                <FormTextarea  placeholder=\"Message\" name=\"message_All\" onChange={this.handleChange} />\r\n                <br/>\r\n                <Button style={{position:\"absolute\", bottom:\"10px\", right:\"20px\"}} pill theme=\"secondary\"> Send To All</Button>\r\n             </form>\r\n             </Row>\r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default  sendTest;","import React, {Component} from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Card, CardBody, Row, Col, CardFooter,Badge, Collapse, Button, ListGroupItem, ListGroup, FormSelect,FormGroup } from \"shards-react\";\r\nimport PageTitle from \"./../components/common/PageTitle\";\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { config } from \"./../config\";\r\n\r\nclass testFilter extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      listTest:[],\r\n      type:'all',\r\n      lever:\"all\",\r\n      collapse:false\r\n    }\r\n  }\r\n  componentWillMount(){\r\n\r\n    this.loadList();\r\n  }\r\n  componentWillUpdate(){\r\n    this.loadList();\r\n  }\r\n  loadList = ()=>{\r\n    \r\n    const {type,lever} = this.state;\r\n    const token  = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      axios(config.UrlServerBase + \"exam/getBy/\" + lever+\"&\"+type, {\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          'Authorization': \"Bearer \" + token\r\n\r\n        }\r\n      }).then(resp => {\r\n       \r\n        if (!resp.data.message)\r\n          this.setState({ listTest: resp.data });\r\n      })\r\n    }\r\n  }\r\n  toggle = ()=> {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n  changeHandle = e=>{\r\n    const target = e.target;\r\n    this.setState({[target.name]:target.value});\r\n  }\r\n  Goto =id=>{\r\n\r\n  }\r\n  render(){\r\n \r\n    return (\r\n      <Container style={{ minHeight:\"790px\" }} fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle title=\"Test List\" className=\"text-sm-left mb-3\" />\r\n           \r\n\r\n        </Row>\r\n        <div>\r\n          <Button onClick={this.toggle}> <i className=\"material-icons\">filter_list</i> Filter</Button>\r\n          <Collapse open={this.state.collapse}>\r\n            <div className=\"p-3 mt-3 border rounded\">\r\n              <FormGroup>\r\n                <label> Выберите тип теста</label>\r\n                <FormSelect name=\"type\" value={this.state.type} onChange={this.changeHandle}>\r\n                  <option value=\"all\">All </option>\r\n                  <option value=\"test\">Test</option>\r\n                  <option value=\"mp4_or_mp3\">Link Video Or Mp3</option>\r\n                  <option value=\"youtube\">Link Youtube</option>\r\n                </FormSelect>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <label>Выберите уровень</label>\r\n                <FormSelect value={this.state.lever} name=\"lever\" onChange={this.changeHandle} >\r\n                  <option value=\"all\">All Lever</option>\r\n                  <option value=\"A1\">Lever A1</option>\r\n                  <option value=\"A2\">Lever A2</option>\r\n                  <option value=\"B1\">Lever B1</option>\r\n                  <option value=\"B2\">Lever B2</option>\r\n                  <option value=\"C1\">Lever C1</option>\r\n                  <option value=\"C2\">Lever C2</option>\r\n                  <option value=\"D1\">Lever D1</option>\r\n                  <option value=\"D2\">Lever D2</option>\r\n                </FormSelect>\r\n              </FormGroup>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <hr/>\r\n        <Row>\r\n          {this.state.listTest.map((test, idx) => (\r\n            <Col lg=\"4\" key={idx} style={{ marginTop: \"10px\" }}>\r\n              <Card small className=\"card-post card-post--1 h-100\">\r\n                <div\r\n                  className=\"card-post__image\"\r\n                  style={{ backgroundImage: `url('${test.type === \"test\" ? require(\"./../images/system/test.jpg\") : require(\"./../images/system/media.jpg\")}')` }}\r\n                >\r\n                   <Badge\r\n                   theme=\"success\"\r\n                    pill\r\n                    className={`card-post__category`}\r\n                    \r\n                  >\r\n                    {\"Lever - \" +test.lever}\r\n                  </Badge>\r\n                </div>\r\n                <CardBody>\r\n                  <h5 className=\"card-title\">\r\n                   \r\n                      {test.title}\r\n                \r\n                  </h5>\r\n                  <p className=\"card-text\">{test.description}</p>\r\n                 \r\n                  <p>дата создания : <small className=\"text-muted\">{new Date(test.date_create).toGMTString()}</small></p>\r\n\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <ListGroup>\r\n                    <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                      <Link to={{ pathname: \"/test\", state: { id: test.id_link } }} >  <i className=\"material-icons\">send</i> Go to Test </Link>\r\n                    \r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <br/>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default testFilter;","import React, {Component} from \"react\";\r\nimport { Form, FormGroup, FormInput, Container, Row, FormSelect,Button} from 'shards-react';\r\nimport UploadFileToFirebase from \"./../firebase/uploadFileToFirebase\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport axios from \"axios\";\r\nimport {config} from './../config';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nclass addVocabulary extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      word:\"\",\r\n      urlImg:'',\r\n      description:\"\",\r\n      _idTopic:'',\r\n      arrTopic:[],\r\n      result:false\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    this.getTopic();\r\n  }\r\n  getTopic=()=>{\r\n    const topics = JSON.parse(sessionStorage.getItem('topics'));\r\n   \r\n    if (!topics){\r\n      const token = localStorage.getItem(\"accessToken\");\r\n      if (token) {\r\n        axios(config.UrlServerBase + \"topic/getName\" , {\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Authorization': \"Bearer \" + token\r\n          }\r\n        }).then(resp => {\r\n          if (!resp.data.err) {\r\n          \r\n            sessionStorage.setItem(\"topics\", JSON.stringify(resp.data));\r\n            this.setState({ arrTopic: resp.data });\r\n          }\r\n        });\r\n      }\r\n    } else this.setState({ arrTopic: topics});\r\n    \r\n  }\r\n\r\n  getFileUrlImage = url=>{\r\n   this.setState({urlImg:url});\r\n  }\r\n  changeHandle= e=>{\r\n    const target = e.target ;\r\n    this.setState({[target.name]:target.value});\r\n  }\r\n\r\n  saveToDatabase=()=>{\r\n    \r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      const {word,description,urlImg, _idTopic} = this.state;\r\n      axios(config.UrlServerBase + \"vocabulary\", {\r\n        method:\"POST\",\r\n        data: { word, description, urlImg, _idTopic },\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          'Authorization': \"Bearer \" + token\r\n        }\r\n      }).then(resp => {\r\n        if (!resp.data.err) {\r\n         this.setState({result:true})  ;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  resetState=()=>{\r\n    this.setState({\r\n      word: \"\",\r\n      urlImg: '',\r\n      description: \"\",\r\n      _idTopic: '',\r\n      result: false\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <Container>\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Add Vocabulary\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {\r\n          this.state.result && <SweetAlert success title=\"Уведомление\" onConfirm={() => this.resetState()}>\r\n            Успешно сохранено в базе данных !\r\n            </SweetAlert>\r\n        }\r\n        <Row>\r\n          <Form style={{width:\"80%\",margin:\"40px auto\"}}>\r\n            \r\n            <FormGroup>\r\n              <UploadFileToFirebase fileName=\"images_vocabularies\" title=\"Загрузить изображение обложки\" getFileUrl={this.getFileUrlImage} />\r\n              {this.state\r\n                .urlImg && <img src={this.state.urlImg} alt=\"img\" style={{ width: \"300px\", height: \"auto\", margin: \"20px\" }} />}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label htmlFor=\"#I1\">Новое слово</label>\r\n              <FormSelect invalid={this.state._idTopic === ''} value={this.state._idTopic} name=\"_idTopic\" onChange={this.changeHandle} >\r\n                <option disabled value=\"\">Выберите тему</option>\r\n               {this.state.arrTopic.map((val,i)=>(\r\n                 <option key={i} value={val._id}>{val.name}</option>\r\n               ))}\r\n               \r\n              </FormSelect>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label htmlFor=\"#I1\">Новое слово</label>\r\n              <FormInput value={this.state.word} id=\"#I1\" name=\"word\" placeholder=\"Новое слово\" onChange={this.changeHandle} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label htmlFor=\"#I2\">Опишите значение слов</label>\r\n              <FormInput value={this.state.description} type=\"text\" id=\"#I2\" name=\"description\" placeholder=\"Опишите значение слов\" onChange={this.changeHandle} />\r\n            </FormGroup>\r\n            <Button theme=\"accent\" disabled={this.state.word===''||this.state.urlImg===''} onClick={this.saveToDatabase} outline size=\"sm\" className=\"ml-auto\">\r\n            <i className=\"material-icons\">save</i> Save To Database</Button>\r\n          </Form>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default addVocabulary;","// import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout,LayoutIndex,LayoutSignPage } from \"./layouts\";\n\n// Route Views\nimport BlogOverview from \"./views/BlogOverview\";\n// import UserProfileLite from \"./views/UserProfileLite\";\nimport AddQuestions from \"./views/AddQuestions\";\nimport Errors from \"./views/Errors\";\nimport Topics from \"./views/topics\";\nimport Vocabulary from \"./views/vocabulary\"\nimport Index from \"./views/Index\"\nimport Home from \"./views/Home\";\nimport AddVideo from \"./views/AddVideo\";\nimport TeacherDashBoard from './views/TeacherDashBoard';\nimport MediaList from './views/mediaList';\nimport Test from './views/Test';\nimport Send from './views/sendTest';\nimport TestFilter from './views/testFilter';\nimport AddVocabulary from \"./views/addVocabulary\";\nimport Books from \"./views/Books\";\nimport AddBook from \"./views/addBook\";\nexport default [\n  {\n    path: \"/login\",\n    layout: LayoutIndex,\n    component: Index\n  },\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: Home,\n    private:true,\n    claim:\"student\"\n  },\n  {\n    path: \"/add-video\",\n    layout: DefaultLayout,\n    component: AddVideo,\n    private:true,\n    claim:\"teacher\"\n  },\n  {\n    path: \"/blog-overview\",\n    layout: DefaultLayout,\n    component: BlogOverview,\n    private:true,\n    claim:\"student\"\n  },\n  // {\n  //   path: \"/user-profile-lite\",\n  //   layout: DefaultLayout,\n  //   component: UserProfileLite,\n  //   private:true,\n  //   claim:\"student\"\n  // },\n  {\n    path: \"/add-test\",\n    layout: DefaultLayout,\n    component: AddQuestions,\n    private:true,\n    claim:\"teacher\"\n  },\n  {\n    path: \"/test\",\n    layout: LayoutSignPage,\n    component: Test,\n    private:true,\n    claim:\"student\"\n  },\n  {\n    path: \"/test-filer\",\n    layout: DefaultLayout,\n    component: TestFilter,\n    private: true,\n    claim: \"student\"\n  },\n  {\n    path: \"/topics\",\n    layout: DefaultLayout,\n    component: Topics,\n    private: true,\n    claim: \"student\"\n  },\n  {\n    path: \"/vocabularies\",\n    layout: DefaultLayout,\n    component: Vocabulary,\n    private: true,\n    claim: \"student\"\n  },\n  {\n    path: \"/books\",\n    layout: DefaultLayout,\n    component: Books,\n    private: true,\n    claim: \"student\"\n  },\n  {\n    path: \"/teacher-dashboard\",\n    layout: DefaultLayout,\n    component: TeacherDashBoard,\n    private:true,\n    claim:\"teacher\"\n  },\n  {\n    path: \"/media\",\n    layout: DefaultLayout,\n    component: MediaList,\n    private:true,\n    claim:\"teacher\"\n  },\n  {\n    path: \"/send\",\n    layout: DefaultLayout,\n    component: Send,\n    private:true,\n    claim:\"teacher\"\n  },\n  {\n    path: \"/add-vocabulary\",\n    layout: DefaultLayout,\n    component: AddVocabulary,\n    private: true,\n    claim: \"teacher\"\n  },\n  {\n    path: \"/add-book\",\n    layout: DefaultLayout,\n    component: AddBook,\n    private: true,\n    claim: \"teacher\"\n  },\n  {\n    path: \"/error\",\n    layout: DefaultLayout,\n    component: Errors\n  },\n];\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\r\nimport { Grid, GridItem } from \"react-masonry-grid\";\r\nimport React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  ListGroupItem,\r\n  Button\r\n} from \"shards-react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport {config} from \"./../config\";\r\n\r\nclass book extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.state = {\r\n      books:[]\r\n    };\r\n  }\r\n  componentWillMount(){\r\n    this.mapDataToState();\r\n  }\r\n  mapDataToState=()=>{\r\n    const books = JSON.parse(sessionStorage.getItem(\"books\")) ;\r\n    if(!books){\r\n      const token = localStorage.getItem(\"accessToken\");\r\n      if (token) {\r\n        axios(config.UrlServerBase + \"book\", {\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            'Authorization': \"Bearer \" + token\r\n\r\n          }\r\n        }).then(resp => {\r\n\r\n          if (!resp.data.err) {\r\n            sessionStorage.setItem(\"books\", JSON.stringify(resp.data));\r\n            this.setState({ books: resp.data});\r\n          }\r\n\r\n        });\r\n      }\r\n    }else{\r\n      this.setState({ books})\r\n    }\r\n   \r\n  }\r\n\r\n viewBook(url){\r\n   window.open(url, \"Books\", 'width=1200,height=800,left=200,top=200');\r\n }\r\n  render() {\r\n\r\n \r\n\r\n    return (\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Books\" subtitle=\"*********\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {this.state.result && <Redirect to=\"/vocabularies\" />}\r\n        <Row>\r\n          <Grid gutter={10} columnWidth={300} rowHeight={10}>\r\n\r\n\r\n            {this.state.books.map((book, idx) => (\r\n\r\n              <GridItem lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\" key={idx}>\r\n                <Card small className=\"card-post card-post--1\">\r\n                  <img src={book.urlImg} alt=\"img\" style={{width:\"100%\", height:\"auto\", borderRadius:\"10px\"}}/>\r\n                  <CardBody>\r\n                    <h5 className=\"card-title\">\r\n                      {book.name}\r\n                    </h5>\r\n                    <p className=\"card-text d-inline-block mb-3\">{book.description}</p>\r\n                    <ListGroupItem className=\"d-flex px-3 border-0\">\r\n                      \r\n                      <Button theme=\"accent\" outline pill size=\"sm\" onClick={() => this.viewBook(book.url)} className=\"ml-auto\">\r\n                        <i className=\"material-icons\">remove_red_eye</i> View\r\n                      </Button>\r\n                    </ListGroupItem>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            ))}\r\n          </Grid>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default book;\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormGroup, FormInput, Container, Row, Button } from 'shards-react';\r\nimport UploadFileToFirebase from \"./../firebase/uploadFileToFirebase\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport axios from \"axios\";\r\nimport { config } from './../config';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nclass addBook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      urlImg: '',\r\n      description: \"\",\r\n      url: '',\r\n      result: false\r\n    }\r\n  }\r\n \r\n  getFileUrlImage = url => {\r\n    this.setState({ urlImg: url });\r\n  }\r\n  changeHandle = e => {\r\n    const target = e.target;\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  saveToDatabase = () => {\r\n\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      const { name, description, urlImg, url } = this.state;\r\n      axios(config.UrlServerBase + \"book\", {\r\n        method: \"POST\",\r\n        data: { name, description, urlImg, url },\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          'Authorization': \"Bearer \" + token\r\n        }\r\n      }).then(resp => {\r\n        if (!resp.data.err) {\r\n          this.setState({ result: true });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  resetState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      urlImg: '',\r\n      description: \"\",\r\n      url: '',\r\n      result: false\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Add Books\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {\r\n          this.state.result && <SweetAlert success title=\"Уведомление\" onConfirm={() => this.resetState()}>\r\n            Успешно сохранено в базе данных !\r\n            </SweetAlert>\r\n        }\r\n        <Row>\r\n          <Form style={{ width: \"80%\", margin: \"40px auto\" }}>\r\n\r\n            <FormGroup>\r\n              <UploadFileToFirebase fileName=\"images\" title=\"Загрузить изображение обложки\" getFileUrl={this.getFileUrlImage} />\r\n              {this.state\r\n                .urlImg && <img alt=\"img\" src={this.state.urlImg} style={{ width: \"300px\", height: \"auto\", margin: \"20px\" }} />}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label htmlFor=\"#I1\">Книги и документы должны быть доступны с Google Drive</label>\r\n              <FormInput value={this.state.url} id=\"#I1\" name=\"url\" placeholder=\"Google Drive Path\" onChange={this.changeHandle} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label htmlFor=\"#I1\">Название книги или документа</label>\r\n              <FormInput value={this.state.name} id=\"#I1\" name=\"name\" placeholder=\"Название книги или документа\" onChange={this.changeHandle} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label htmlFor=\"#I2\">Введение :</label>\r\n              <FormInput value={this.state.description} type=\"text\" id=\"#I2\" name=\"description\" placeholder=\"Введение\" onChange={this.changeHandle} />\r\n            </FormGroup>\r\n            <Button theme=\"accent\" disabled={this.state.name === '' || this.state.urlImg === ''||this.state.url===\"\"} onClick={this.saveToDatabase} outline size=\"sm\" className=\"ml-auto\">\r\n              <i className=\"material-icons\">save</i> Save To Database</Button>\r\n          </Form>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default addBook;","import React from \"react\";\r\nimport {Route,Redirect} from \"react-router-dom\";\r\nimport {userAuth} from \"./isAuthenticated\";\r\n\r\nexport const ProtectedRoute = ({component :Component, ...rest})=>{\r\n   \r\n    \r\n     return <Route {...rest} render={(props) => {\r\n             return userAuth.isAuthenticated ? rest.claim === userAuth.claim? <Component {...props} />: <Redirect to =\"/\" />:\r\n              <Redirect to ={{pathname:\"login\", state :{from :props.location, claim: rest.claim}}} />\r\n           \r\n     }}/>\r\n      \r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route,Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/styles/shards-dashboards.1.1.0.min.css\";\nimport { userActions } from \"./Redux/Actions\";\nimport { connect } from \"react-redux\";\nimport {ProtectedRoute} from \"./auth/ProtectedRoute\";\nimport Errors from \"./views/Errors\";\nimport \"./../node_modules/video-react/dist/video-react.css\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props){\n    super();\n    props.getProfileFetch();\n  //  window.responsiveVoice.speak(\"Добро пожаловать в онлайн приложение для изучения русского языка.желаю вам эффективного обучения\", \"Russian Male\", {pitch:0.75 ,rate: 1,volume:1.2});\n  }\n  render() {\n  \n    return (\n      <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\n      \n        <Switch>\n          {routes.map((route, index) => {\n            return route.private ? \n              <ProtectedRoute\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                claim={route.claim}\n                component={props => {\n                  return (\n                    <route.layout {...props}>\n                    <ReactCSSTransitionGroup\n                      transitionAppear={true}\n                      transitionAppearTimeout={600}\n                      transitionEnterTimeout={600}\n                      transitionLeaveTimeout={200}\n                      transitionName=\"SlideIn\"\n                    > \n                          <route.component {...props} />\n                    </ReactCSSTransitionGroup>\n                     \n                    </route.layout>\n                  );\n                }}\n              /> :<Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                component={props => {\n                  return (\n                    <route.layout {...props}>\n                      <route.component {...props} />\n                    </route.layout>\n                  );\n                }}\n              />\n            \n          })}\n          <Route path=\"*\" component={Errors}/>\n          </Switch>\n      </Router>\n    );\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProfileFetch: () => dispatch(userActions.getProfileFetch())\n})\nconst mapStateTopProps = state=>({\n  user:state.user\n})\nexport default connect(mapStateTopProps, mapDispatchToProps)(App);","import types from \"./../Types\";\r\nimport {userAuth} from \"./../../auth/isAuthenticated\";\r\nconst initialState = {\r\n    currentUser:{},\r\n    message:\"\",\r\n    auth: false,\r\n    students:[]\r\n\r\n}\r\nexport default function userReducer (state = initialState, action) {\r\n\r\n    switch(action.type){\r\n        case types.login:\r\n            userAuth.authenticate(action.payload.claim);\r\n            return {...state, currentUser:action.payload,auth:true, message:\"\"};\r\n\r\n        case types.message:{\r\n            return {...state, message: action.payload, auth:false};\r\n        } \r\n        case types.logout:\r\n            sessionStorage.removeItem(\"notifications\");\r\n            userAuth.signOut();\r\n            return{...state, currentUser:null, auth:false};  \r\n        case types.getStudents:\r\n          return {...state, students: action.payload};\r\n        default:\r\n            return state;    \r\n    }\r\n}","import types from \"../Types\";\r\nconst initialState = {\r\n    videos:[]\r\n}\r\nexport default function mediaReducer (state = initialState, action) {\r\n\r\n    switch(action.type){\r\n        case types.getVideo:\r\n            return {...state, videos:action.payload};  \r\n        default:\r\n            return state;    \r\n    }\r\n}","import types from \"../Types\";\r\nconst initialState = {\r\n    Posts:[]\r\n}\r\nexport default function postReducer (state = initialState, action) {\r\n\r\n    switch(action.type){\r\n        case types.getPost:\r\n            return {...state, Posts:action.payload};  \r\n        default:\r\n            return state;    \r\n    }\r\n}","import types from \"../Types\";\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    text: '',\r\n    status: false,\r\n    result: false,\r\n    id: \"\",\r\n    test: null,\r\n    response:null,\r\n    update_status:false\r\n}\r\nexport default function testReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case types.addTest:\r\n            return { ...state, result: action.payload.result, id: action.payload.id }\r\n        case types.updateTest:\r\n            return { ...state, update_status: action.payload.result }\r\n        case types.getTest:\r\n            return { ...state, test: action.payload }\r\n        case types.checkTest:\r\n            return {...state,response:action.payload } \r\n        case types.resetTest:\r\n            return { ...state, update_status: false, response: null, result: false, test: null, questions: [], status: false, id: \"\", text:'' }    \r\n        default:\r\n            return state;\r\n    }\r\n}","import types from \"../Types\";\r\nconst initialState = {\r\n    menuVisible:false\r\n}\r\nexport default function systemReducer (state = initialState, action) {\r\n\r\n    switch(action.type){\r\n        case types.toggleMenu:\r\n            \r\n            return {...state, menuVisible:!state.menuVisible};  \r\n        default:\r\n            return state;    \r\n    }\r\n}","import types from \"../Types\";\r\nconst initialState = {\r\n  vocabularies:[],\r\n  name:\"\",\r\n  topics:[]\r\n}\r\nexport default function vocabularyReducer(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case types.getVocabulary:\r\n      return { ...state, vocabularies: action.payload.data,name:action.payload.name };\r\n    case types.resetVocabulary:\r\n      return { ...state, vocabularies: [],name:\"\" };\r\n    case types.getTopics:\r\n      return { ...state, topics:action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from \"redux\";\r\nimport UserReducer from './UserReducer';\r\nimport VideoReducer from './VideoReducer';\r\nimport PostReducer from \"./PostReducer\"\r\nimport TestReducer from \"./TestReducer\";\r\nimport SystemReducer from './SystemReducer'\r\nimport VocabularyReducer from \"./vocabularyReducer\"\r\nexport default combineReducers ({\r\n    user : UserReducer,\r\n    video:VideoReducer,\r\n    post: PostReducer,\r\n    test:TestReducer,\r\n    system:SystemReducer,\r\n    vocabulary: VocabularyReducer\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport appReducer from './Redux/Reducers/';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(appReducer, applyMiddleware(thunk))\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/userAvatar.3c1d695c.png\";"],"sourceRoot":""}